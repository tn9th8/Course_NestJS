var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.138,1,2.983]],["body/controllers/AppController.html",[0,1.787,1,4.685,2,1.5,3,0.151,4,0.151,5,0.101,6,4.421,7,0.273,8,0.013,9,0.771,10,4.505,11,4.421,12,3.661,13,2.501,14,4.033,15,5.064,16,5.595,17,0.151,18,0.233,19,2.047,20,3.218,21,1.973,22,5.064,23,5.064,24,2.742,25,5.064,26,5.064,27,6.443,28,3.998,29,4.421,30,2.501,31,5.064,32,1.36,33,6.443,34,7.087,35,1.842,36,1.837,37,5.064,38,5.064,39,0.691,40,5.064,41,0.01,42,0.01]],["title/modules/AppModule.html",[43,0.968,44,2.983]],["body/modules/AppModule.html",[1,4.381,2,1.539,3,0.11,4,0.11,5,0.074,7,0.302,8,0.013,9,0.56,10,4.559,11,3.21,12,3.383,13,1.816,17,0.11,18,0.169,28,2.903,35,0.956,41,0.008,42,0.008,43,1.422,44,6.13,45,1.544,46,1.544,47,1.67,48,1.67,49,1.544,50,2.737,51,1.67,52,3.21,53,3.21,54,3.21,55,4.857,56,4.857,57,4.857,58,4.857,59,4.857,60,4.857,61,4.857,62,4.857,63,4.304,64,4.857,65,4.559,66,2.36,67,1.67,68,1.604,69,3.677,70,2.852,71,3.677,72,1.899,73,0.987,74,4.102,75,3.677,76,3.677,77,3.677,78,1.74,79,1.245,80,1.74,81,0.987,82,3.677,83,3.677,84,3.677,85,3.677,86,3.677,87,3.677,88,3.677,89,3.677,90,3.677,91,3.677,92,2.903,93,3.677,94,2.903,95,3.677,96,2.903,97,1.334,98,3.677,99,3.677,100,3.677,101,5.196,102,3.677,103,2.903,104,3.677,105,2.49,106,3.677,107,3.677,108,3.677,109,1.245,110,3.677,111,2.903,112,3.677,113,3.677,114,3.677,115,3.677,116,1.544,117,4.537,118,3.677,119,3.677,120,3.677,121,3.677]],["title/injectables/AppService.html",[10,2.608,122,0.795]],["body/injectables/AppService.html",[3,0.178,4,0.178,5,0.119,7,0.218,8,0.013,9,0.909,10,4.533,17,0.178,18,0.275,35,1.551,39,0.973,41,0.011,42,0.011,122,1.382,123,2.165,124,5.21,125,0.614,126,1.915,127,7.9,128,0.784,129,5.967,130,1.602,131,3.581,132,2.412,133,5.21,134,5.967,135,5.967,136,5.967,137,5.967]],["title/controllers/AuthController.html",[0,1.138,138,2.983]],["body/controllers/AuthController.html",[0,0.92,2,0.982,3,0.099,4,0.099,5,0.066,7,0.278,8,0.013,9,0.505,14,3.238,16,2.619,17,0.099,18,0.153,19,1.341,20,2.584,30,1.639,32,1.296,35,1.801,41,0.007,42,0.007,94,2.619,97,2.064,109,1.926,125,0.342,126,1.296,128,0.872,130,1.783,131,1.991,138,3.509,139,2.896,140,1.639,141,2.619,142,4.827,143,4.827,144,5.689,145,5.689,146,4.827,147,3.317,148,2.567,149,1.618,150,3.317,151,2.311,152,4.827,153,3.317,154,1.903,155,0.714,156,0.835,157,1.783,158,1.507,159,3.317,160,4.712,161,3.317,162,3.317,163,3.811,164,3.317,165,4.231,166,3.317,167,3.317,168,3.317,169,3.317,170,4.158,171,3.317,172,4.214,173,3.509,174,3.317,175,3.317,176,3.751,177,3.317,178,1.429,179,3.317,180,1.714,181,1.714,182,3.317,183,6.248,184,3.317,185,2.619,186,3.556,187,1.57,188,1.341,189,2.412,190,3.317,191,3.317,192,2.897,193,1.991,194,1.796,195,1.796,196,1.393,197,2.613,198,2.619,199,3.317,200,4.827,201,1.639,202,1.341,203,3.317,204,3.317,205,2.493,206,3.317,207,3.317,208,3.317,209,3.317,210,3.317,211,3.317,212,5.689,213,3.317,214,3.317,215,3.317,216,3.317,217,3.317,218,3.317,219,3.617,220,2.896,221,1.57,222,1.162,223,2.412,224,3.317,225,4.827,226,3.317,227,2.619,228,1.448,229,3.317,230,3.317,231,3.317,232,2.412,233,2.247,234,3.317,235,2.412,236,3.317,237,3.317,238,3.068,239,4.214,240,2.613,241,4.214,242,4.214,243,3.509,244,3.317,245,3.317,246,3.317]],["title/modules/AuthModule.html",[43,0.968,55,2.778]],["body/modules/AuthModule.html",[2,1.754,3,0.133,4,0.133,5,0.089,7,0.299,8,0.013,9,0.678,12,3.818,13,2.198,14,4.655,17,0.133,18,0.205,41,0.009,42,0.009,43,1.571,45,1.868,46,1.868,47,2.021,48,2.021,49,1.868,50,3.024,51,3.024,55,5.626,63,4.562,65,4.832,66,2.69,67,2.021,68,1.942,70,3.151,74,4.676,96,3.512,97,1.614,103,3.512,138,4.841,185,3.512,247,3.884,248,3.884,249,3.884,250,4.449,251,5.148,252,5.148,253,4.449,254,4.449,255,5.923,256,2.828,257,4.449,258,4.449,259,3.512,260,4.449,261,3.235,262,3.013,263,4.676,264,3.013,265,4.449,266,3.884,267,4.449,268,3.884,269,3.884,270,4.449,271,3.884,272,4.449,273,3.884]],["title/injectables/AuthService.html",[14,2.335,122,0.795]],["body/injectables/AuthService.html",[3,0.07,4,0.07,5,0.047,7,0.248,8,0.013,9,0.359,12,3.283,13,1.165,14,2.12,17,0.07,18,0.109,19,1.506,20,2.381,28,1.862,32,1.987,35,1.652,39,0.966,41,0.006,42,0.006,97,2.651,109,1.563,122,0.722,123,0.856,125,0.243,126,1,128,0.835,130,1.408,131,2.235,148,2.227,151,2.144,154,1.636,155,0.785,156,0.667,157,1.533,158,2.593,160,4.337,163,4.508,172,5.92,173,5.048,176,2.839,178,1.103,193,1.415,194,1.277,195,1.277,196,0.99,197,3.441,198,1.862,205,3.135,221,1.116,227,2.941,228,2.875,232,1.715,235,1.715,259,1.862,263,2.941,264,1.597,268,3.252,271,2.059,273,2.059,274,2.059,275,0.968,276,4.616,277,4.616,278,3.725,279,3.252,280,3.725,281,2.358,282,6.355,283,2.358,284,3.725,285,2.358,286,3.725,287,2.358,288,3.252,289,2.358,290,1.862,291,3.725,292,4.14,293,2.358,294,2.235,295,3.252,296,2.235,297,2.12,298,2.358,299,2.358,300,2.627,301,1.862,302,1.116,303,1.415,304,0.919,305,1.342,306,3.725,307,1.277,308,2.358,309,1.715,310,2.358,311,2.358,312,2.358,313,2.059,314,1.715,315,1.652,316,2.358,317,4.03,318,2.059,319,2.059,320,3.725,321,2.358,322,2.358,323,2.708,324,3.725,325,1.965,326,3.252,327,4.578,328,2.519,329,1.14,330,3.725,331,2.708,332,2.059,333,2.949,334,3.725,335,2.358,336,3.252,337,2.059,338,0.99,339,3.645,340,3.645,341,3.252,342,3.725,343,4.03,344,6.78,345,3.725,346,2.071,347,3.725,348,3.725,349,4.616,350,4.616,351,3.725,352,3.725,353,3.725,354,4.616,355,3.725,356,3.725,357,4.616,358,2.358,359,2.059,360,3.725,361,2.358,362,2.358,363,2.358,364,2.358,365,2.059,366,2.358,367,2.059,368,2.358,369,2.358,370,2.059,371,1.862,372,2.358,373,2.358,374,2.358,375,3.725,376,2.017,377,1.351,378,2.941,379,1.261,380,3.252,381,3.252,382,2.059,383,1.597,384,2.059,385,2.358,386,2.358,387,1.029,388,2.358,389,2.358,390,2.358,391,2.059,392,1.862,393,2.358,394,1.499,395,2.358,396,2.358,397,2.358]],["title/controllers/CompaniesController.html",[0,1.138,398,2.983]],["body/controllers/CompaniesController.html",[0,0.981,2,1.047,3,0.105,4,0.105,5,0.071,7,0.267,8,0.013,9,0.539,17,0.105,18,0.163,21,1.378,29,3.087,32,0.949,35,1.77,39,1.128,41,0.007,42,0.007,79,1.197,116,2.702,125,0.364,126,1.357,128,0.894,130,1.828,132,2.752,140,1.747,148,2.697,149,1.659,151,2.36,154,1.951,155,0.732,156,0.795,157,1.828,170,2.122,180,2.611,181,3.047,186,3.356,187,1.673,188,1.43,196,1.484,201,1.747,202,1.43,233,2.395,329,1.082,346,2.14,379,1.197,398,3.675,399,3.087,400,5.149,401,1.272,402,2.385,403,2.043,404,2.043,405,3.087,406,4.501,407,3.536,408,1.543,409,3.09,410,3.087,411,3.675,412,5.054,413,3.536,414,2.808,415,1.484,416,3.536,417,3.536,418,2.097,419,1.673,420,2.876,421,3.536,422,1.827,423,5.048,424,3.213,425,3.536,426,1.914,427,1.914,428,3.749,429,3.087,430,1.43,431,3.99,432,1.484,433,3.536,434,3.536,435,1.543,436,2.395,437,3.536,438,3.536,439,3.087,440,3.536,441,2.122,442,2.122,443,2.122,444,3.536,445,3.536,446,3.536,447,2.792,448,3.536,449,2.248,450,2.792,451,2.012,452,2.792,453,3.536,454,3.536,455,4.412,456,3.536,457,1.283,458,2.012,459,2.012,460,3.536,461,2.248,462,3.536,463,2.012,464,3.536]],["title/modules/CompaniesModule.html",[43,0.968,56,2.778]],["body/modules/CompaniesModule.html",[2,2.006,3,0.164,4,0.164,5,0.11,7,0.288,8,0.013,9,0.835,17,0.164,18,0.253,41,0.01,42,0.01,43,1.734,45,2.303,46,2.303,47,2.491,48,2.491,49,2.303,50,3.338,51,2.491,56,5.44,66,3.077,67,2.491,68,2.394,70,2.596,72,2.833,73,1.473,155,0.589,398,5.344,428,5.107,429,4.789,465,4.789,466,4.789,467,5.485,468,5.485,469,1.795,470,4.925,471,4.789,472,2.97,473,4.789,474,2.137]],["title/injectables/CompaniesService.html",[122,0.795,428,2.608]],["body/injectables/CompaniesService.html",[3,0.066,4,0.066,5,0.044,7,0.249,8,0.013,9,0.335,17,0.066,18,0.101,19,1.424,20,1.6,24,1.907,30,2.49,32,1.481,35,1.67,39,0.965,41,0.005,42,0.005,73,0.59,78,1.667,79,1.993,80,1.667,81,1.481,97,2.673,109,0.744,116,2.697,117,1.92,122,0.683,123,0.798,125,0.226,126,0.946,128,0.773,130,1.481,131,2.114,132,2.23,133,1.92,148,2.382,151,2.027,154,1.687,155,0.633,156,0.774,157,1.58,158,2.505,178,1.043,188,0.889,196,0.923,219,1.398,221,3.041,222,1.234,228,2.804,232,1.599,238,1.398,240,1.191,242,3.076,264,3.414,300,1.251,302,1.041,303,1.32,304,0.857,305,2.005,307,2.729,315,1.31,325,1.838,329,0.673,346,1.278,371,1.736,376,1.191,377,0.798,379,1.193,383,1.489,394,3.204,401,0.887,402,1.424,403,1.424,404,1.424,405,3.076,406,3.93,408,1.537,409,1.923,414,1.923,415,1.479,418,1.963,419,1.667,422,1.82,423,4.351,427,1.191,428,2.24,430,0.889,431,2.781,432,0.923,447,2.781,450,2.781,451,2.005,455,1.92,457,2.135,469,1.153,471,1.92,475,1.92,476,2.199,477,2.604,478,2.199,479,3.523,480,2.199,481,2.199,482,2.199,483,2.199,484,2.199,485,1.736,486,1.136,487,1.32,488,1.251,489,2.199,490,1.599,491,1.599,492,0.999,493,1.489,494,2.199,495,2.199,496,1.92,497,2.135,498,1.92,499,2.199,500,0.923,501,3.414,502,3.31,503,3.025,504,2.114,505,1.32,506,1.32,507,1.32,508,2.199,509,1.736,510,2.199,511,1.82,512,1.599,513,1.489,514,1.736,515,2.199,516,1.92,517,1.92,518,1.191,519,1.599,520,3.187,521,2.199,522,1.398,523,2.199,524,1.92,525,1.92,526,1.92,527,1.32,528,2.114,529,1.32,530,1.92,531,1.92,532,2.781,533,2.781,534,1.92,535,1.92,536,3.48,537,3.48,538,2.114,539,2.199,540,2.114,541,1.32,542,2.645,543,1.92,544,1.736,545,3.076,546,2.199,547,2.199,548,4.816,549,2.199,550,2.199,551,4.881,552,3.848,553,2.199,554,2.199,555,1.191,556,2.199,557,2.199,558,2.199,559,2.199,560,3.414,561,2.199,562,3.523,563,2.781,564,2.199,565,3.523,566,1.136,567,2.199,568,2.199,569,2.199,570,2.199,571,1.398,572,2.199,573,2.199,574,1.907,575,2.199,576,1.32,577,1.32,578,1.32,579,1.32,580,1.32,581,1.191,582,1.32,583,1.736,584,1.32,585,1.32,586,1.736,587,2.781,588,2.781,589,1.32,590,1.32,591,1.736,592,1.191,593,1.599,594,1.599,595,2.24,596,1.599,597,2.645,598,1.599,599,1.086,600,1.398,601,1.489,602,2.199,603,2.199,604,2.199,605,4.408,606,0.96,607,1.6,608,1.599,609,2.199,610,1.191,611,3.076,612,1.599,613,1.92,614,3.076,615,2.199,616,2.199,617,1.92,618,1.92,619,1.92,620,1.92,621,3.076,622,1.92,623,1.92,624,0.96,625,2.199,626,1.736,627,2.199,628,2.199,629,1.489,630,1.191,631,1.191,632,0.999]],["title/classes/Company.html",[18,0.189,469,1.343]],["body/classes/Company.html",[3,0.122,4,0.122,5,0.082,7,0.205,8,0.013,17,0.19,18,0.258,32,1.097,39,1.092,41,0.008,42,0.008,73,1.097,81,1.502,109,1.384,125,0.421,128,1.052,149,1.951,155,0.685,156,0.971,275,1.454,315,1.657,325,1.769,329,2.269,387,2.782,469,1.83,470,2.971,474,2.484,485,3.226,497,1.483,500,2.677,522,2.598,571,2.598,606,2.782,624,2.782,630,3.452,631,3.452,632,3.367,633,0.996,634,2.971,635,3.294,636,2.896,637,4.318,638,3.452,639,3.652,640,4.087,641,4.087,642,3.628,643,3.827,644,4.087,645,4.087,646,4.087,647,4.087,648,2.889,649,4.087,650,4.087,651,4.087,652,4.087,653,4.087,654,2.453,655,3.183,656,2.453,657,2.578,658,3.568]],["title/classes/Company-1.html",[18,0.158,469,1.12,497,1.241]],["body/classes/Company-1.html",[3,0.109,4,0.109,5,0.073,7,0.22,8,0.013,17,0.109,18,0.318,30,2.969,36,2.935,39,1.058,41,0.008,42,0.008,81,1.391,109,1.239,125,0.377,128,0.79,149,1.465,155,0.741,156,0.805,178,1.534,222,2.834,275,1.346,297,2.947,304,1.426,325,1.667,329,1.585,377,2.813,379,2.335,411,2.66,457,1.879,469,2.257,607,1.662,610,1.981,632,3.252,633,0.892,636,2.352,637,4.07,639,1.597,648,2.675,657,2.094,659,5.16,660,2.66,661,3.567,662,3.659,663,3.659,664,3.659,665,5.248,666,2.196,667,3.765,668,4.088,669,5.248,670,1.981,671,3.292,672,3.292,673,3.108,674,3.292,675,1.536,676,1.981,677,2.196,678,3.384,679,3.925,680,3.132,681,3.563,682,2.66,683,3.292,684,4.088,685,3.765,686,3.765,687,4.088,688,4.088,689,2.66,690,2.889,691,4.521,692,5.16,693,4.088,694,3.195,695,3.821,696,2.66,697,2.889,698,3.195,699,3.195]],["title/classes/Company-2.html",[18,0.158,307,1.853,469,1.12]],["body/classes/Company-2.html",[3,0.109,4,0.109,5,0.073,7,0.239,8,0.013,17,0.179,18,0.339,21,2.018,36,2.951,39,1.097,41,0.008,42,0.008,81,1.391,125,0.377,128,0.68,149,1.262,155,0.791,156,0.763,176,1.981,192,2.196,193,3.607,194,1.981,202,1.479,222,2.817,275,1.346,294,3.108,304,1.426,315,1.862,325,1.667,328,2.181,329,1.84,377,2.896,379,1.239,401,0.921,418,1.084,457,1.879,469,2.257,492,1.662,511,2.675,555,2.804,607,1.662,633,0.892,635,3.376,636,2.352,639,1.597,657,2.43,661,3.608,666,2.196,670,3.254,671,3.292,672,3.292,673,3.607,674,3.292,675,1.536,676,1.981,678,3.484,680,2.73,681,3.105,700,2.326,701,3.659,702,3.659,703,4.37,704,3.108,705,1.981,706,3.877,707,3.922,708,3.922,709,3.765,710,2.66,711,2.66]],["title/classes/CreateCompanyDto.html",[18,0.189,406,2.608]],["body/classes/CreateCompanyDto.html",[3,0.146,4,0.146,5,0.098,7,0.18,8,0.013,17,0.146,18,0.291,36,2.676,39,1.098,41,0.009,42,0.009,125,0.506,128,0.969,149,1.797,155,0.82,156,0.861,222,2.82,275,1.643,377,2.92,406,4.018,633,1.197,635,3.942,636,3.466,637,5.168,661,3.33,675,2.063,678,3.512,712,6.663,713,3.879,714,3.644,715,4.913,716,4.913,717,4.913,718,4.913]],["title/classes/CreateFileDto.html",[18,0.189,719,2.608]],["body/classes/CreateFileDto.html",[3,0.193,4,0.193,5,0.13,8,0.012,17,0.193,18,0.299,41,0.011,42,0.011,633,1.581,719,4.761,720,5.664,721,5.121]],["title/classes/CreateJobDto.html",[18,0.189,677,2.462]],["body/classes/CreateJobDto.html",[3,0.085,4,0.085,5,0.057,7,0.191,8,0.013,17,0.085,18,0.288,30,2.576,36,2.841,39,1.051,41,0.006,42,0.006,81,1.161,109,1.464,125,0.295,128,0.977,149,1.813,155,0.705,156,0.89,178,1.281,222,2.9,275,1.124,297,2.461,304,1.115,325,0.794,329,1.324,377,2.908,379,2.479,411,2.08,457,2.108,469,2.23,607,1.299,610,1.549,632,3.424,633,0.697,636,2.834,637,1.938,639,1.249,648,3.002,657,1.157,659,5.952,660,2.08,661,3.362,665,4.552,666,1.717,667,3.144,668,3.414,669,4.552,670,1.549,671,2.749,672,2.749,673,2.596,674,2.749,675,1.201,676,1.549,677,2.596,678,3.417,679,4.088,680,3.325,681,3.782,682,2.08,683,2.749,684,4.117,685,4.537,686,4.537,687,4.927,688,4.927,689,2.08,690,3.414,691,3.776,692,5.541,693,4.588,694,3.776,695,4.333,696,2.08,697,2.259,698,2.498,699,2.498,714,3.617,722,2.498,723,2.861,724,2.861,725,4.325,726,4.325,727,2.861,728,2.498,729,2.861,730,2.861,731,2.861,732,2.861,733,2.861,734,2.861,735,2.498,736,2.498,737,2.861,738,2.861]],["title/classes/CreatePermissionDto.html",[18,0.189,739,2.608]],["body/classes/CreatePermissionDto.html",[3,0.145,4,0.145,5,0.097,7,0.178,8,0.013,17,0.145,18,0.29,36,2.667,39,1.096,41,0.009,42,0.009,43,1.795,125,0.502,128,0.966,149,1.792,155,0.818,156,0.858,222,2.815,275,1.634,304,1.898,329,1.491,377,2.915,633,1.187,661,3.321,675,2.045,676,2.638,678,3.506,714,3.632,739,3.996,740,6.645,741,3.846,742,4.838,743,5.154,744,4.871,745,4.871,746,4.871,747,4.871]],["title/classes/CreateResumeDto.html",[18,0.189,748,2.778]],["body/classes/CreateResumeDto.html",[3,0.113,4,0.113,5,0.076,7,0.194,8,0.013,17,0.158,18,0.283,36,2.914,39,1.015,41,0.008,42,0.008,81,1.427,105,5.039,125,0.391,128,0.952,149,1.766,156,0.846,222,2.85,275,1.382,304,2.071,315,1.934,329,1.627,377,2.951,379,1.8,418,1.574,492,2.414,497,1.929,511,3.432,555,2.878,599,3.454,633,0.925,657,3.069,661,3.41,670,3.321,675,1.594,676,2.878,678,3.549,680,2.414,681,1.962,704,3.681,714,3.454,748,3.6,749,5.874,750,2.761,751,5.52,752,5.52,753,5.084,754,3.798,755,2.998,756,3.798,757,3.798,758,3.798,759,3.798,760,3.798,761,2.761,762,2.998,763,2.998,764,2.998,765,2.414]],["title/classes/CreateRoleDto.html",[18,0.189,766,2.608]],["body/classes/CreateRoleDto.html",[3,0.132,4,0.132,5,0.089,7,0.216,8,0.013,17,0.132,18,0.272,36,2.855,39,0.966,41,0.009,42,0.009,81,1.584,109,1.997,125,0.455,128,0.93,149,1.726,155,0.793,156,0.827,222,2.757,275,1.534,329,1.806,333,4.116,377,2.855,379,2.397,411,4.29,418,1.31,451,3.357,492,2.679,511,3.658,633,1.078,636,3.35,648,3.658,657,2.385,661,3.219,667,4.29,668,5.241,675,1.857,678,3.312,682,4.29,683,2.812,695,4.925,704,3.541,714,3.498,728,3.862,766,3.751,767,6.441,768,3.492,769,4.423,770,5.9,771,5.151,772,4.423,773,4.423,774,4.423,775,4.423,776,4.423]],["title/classes/CreateSubscriberDto.html",[18,0.189,777,2.608]],["body/classes/CreateSubscriberDto.html",[3,0.139,4,0.139,5,0.093,7,0.17,8,0.013,17,0.139,18,0.281,36,2.887,39,1.086,41,0.009,42,0.009,109,2.066,125,0.479,128,0.894,149,1.659,155,0.806,156,0.795,222,2.846,275,1.586,315,2.039,377,2.793,379,2.446,511,3.153,555,3.304,633,1.134,661,3.153,667,4.437,670,3.304,673,3.663,675,1.954,678,3.153,679,4.464,680,3.496,681,3.977,682,3.385,683,2.959,684,4.818,714,3.363,735,4.065,736,4.065,777,3.88,778,6.309,779,3.675,780,4.655,781,4.655,782,4.655,783,4.655]],["title/classes/CreateUserCvDto.html",[18,0.189,765,2.608]],["body/classes/CreateUserCvDto.html",[3,0.122,4,0.122,5,0.082,7,0.204,8,0.013,17,0.167,18,0.294,36,2.927,39,0.979,41,0.008,42,0.008,81,1.5,105,5.138,125,0.42,128,0.837,149,1.552,156,0.744,222,2.827,275,1.452,304,2.177,315,1.656,329,1.71,377,2.927,379,2.319,418,2.029,492,3.111,497,2.485,511,3.707,555,2.209,599,2.759,633,0.994,657,3.067,661,3.46,670,3.024,675,1.713,676,3.024,678,3.46,680,1.853,681,2.107,704,3.823,714,3.147,748,2.763,749,5.409,750,2.966,751,5.698,752,5.698,753,4.061,761,2.966,762,3.221,763,3.221,764,3.221,765,3.551,784,4.877,785,4.079,786,4.079,787,4.079]],["title/classes/CreateUserDto.html",[18,0.189,705,2.221]],["body/classes/CreateUserDto.html",[3,0.092,4,0.092,5,0.062,7,0.221,8,0.013,17,0.163,18,0.322,21,1.787,36,2.896,39,1.095,41,0.007,42,0.007,81,1.232,125,0.319,128,0.944,149,1.751,155,0.772,156,0.872,176,1.676,192,1.858,193,4.404,194,1.676,202,1.251,222,2.861,275,1.192,294,2.753,304,1.206,315,1.941,325,0.859,328,2.538,329,1.85,377,2.939,379,1.553,401,0.779,418,1.358,457,1.983,469,2.289,492,2.083,511,2.823,555,2.959,607,1.406,633,0.754,635,3.614,636,2.083,639,1.351,657,2.21,661,3.502,666,1.858,670,3.272,671,2.916,672,2.916,673,3.28,674,2.916,675,1.299,676,1.676,678,3.52,680,2.931,681,3.122,700,1.968,703,3.973,704,2.753,705,2.484,706,3.973,707,4.199,708,4.199,709,3.335,710,2.25,711,2.25,714,3.339,722,2.702,755,2.443,784,2.702,788,3.095,789,3.095,790,3.095,791,3.095,792,3.095,793,3.095,794,3.095,795,3.095]],["title/controllers/DatabasesController.html",[0,1.138,796,2.983]],["body/controllers/DatabasesController.html",[0,1.681,2,1.795,3,0.181,4,0.181,5,0.121,7,0.281,8,0.013,9,0.923,17,0.181,18,0.279,21,2.362,41,0.011,42,0.011,140,2.994,201,2.994,202,2.45,435,2.645,796,5.232,797,5.292,798,6.061,799,4.88,800,5.292,801,6.061,802,6.061]],["title/modules/DatabasesModule.html",[43,0.968,57,2.778]],["body/modules/DatabasesModule.html",[2,1.882,3,0.148,4,0.148,5,0.099,7,0.298,8,0.013,9,0.755,12,3.283,13,2.448,17,0.148,18,0.228,41,0.009,42,0.009,43,1.655,45,2.08,46,2.08,47,2.25,48,2.25,49,2.08,50,3.186,51,2.25,57,5.46,66,2.886,67,2.25,68,2.162,70,2.345,72,2.56,73,1.331,151,1.42,155,0.754,205,4.044,301,3.912,328,1.798,338,2.08,472,2.683,474,2.734,796,5.1,799,4.977,800,4.326,803,4.326,804,4.326,805,4.955,806,4.955,807,4.303,808,4.326,809,4.303,810,3.603,811,4.04,812,3.356,813,4.326,814,3.912,815,3.603]],["title/injectables/DatabasesService.html",[122,0.795,799,2.608]],["body/injectables/DatabasesService.html",[3,0.093,4,0.093,5,0.092,7,0.269,8,0.013,9,0.475,12,3.623,13,1.541,17,0.093,18,0.144,19,1.866,20,3.27,21,2.14,30,1.541,32,1.883,41,0.007,42,0.007,43,0.736,73,0.838,78,1.477,79,1.056,80,1.477,81,0.838,97,1.992,109,1.562,122,0.894,123,1.132,125,0.321,126,1.239,128,0.721,130,0.838,151,1.574,154,0.894,155,0.774,156,0.364,157,0.838,178,1.367,205,3.134,221,1.477,228,3.209,275,1.2,296,1.873,297,1.776,301,2.463,303,1.873,304,1.216,314,2.269,315,1.427,323,2.269,328,2.349,333,3.345,338,1.31,346,1.132,365,2.724,401,1.527,418,0.924,439,2.724,450,2.463,477,3.864,486,1.612,493,3.125,497,1.674,498,2.724,518,1.689,520,1.689,560,2.113,608,2.269,612,2.269,618,2.724,626,2.463,635,2.837,636,2.096,695,2.933,696,2.269,706,2.973,707,3.296,708,3.296,799,2.933,808,2.724,810,2.269,812,2.113,816,2.724,817,6.475,818,6.779,819,2.724,820,4.794,821,4.335,822,5.491,823,4.614,824,3.12,825,4.614,826,2.269,827,2.113,828,2.269,829,3.992,830,2.463,831,3.992,832,4.614,833,2.113,834,2.724,835,2.724,836,2.463,837,4.614,838,3.12,839,3.12,840,3.12,841,3.12,842,2.463,843,5.491,844,3.12,845,5.491,846,3.12,847,5.491,848,3.12,849,3.12,850,2.724,851,3.12,852,3.12,853,3.12,854,3.12,855,3.12,856,3.12,857,2.724,858,4.929,859,3.12,860,2.463,861,3.12,862,2.269,863,3.643,864,3.12,865,3.12,866,3.12,867,3.12,868,3.12,869,3.12,870,4.794,871,3.12,872,2.724,873,3.12,874,2.463,875,3.12,876,2.724,877,2.463,878,3.12,879,3.643,880,3.12,881,5.491,882,3.12,883,5.491,884,5.491,885,5.491,886,4.614,887,5.491,888,4.614,889,3.12,890,3.12,891,3.12,892,3.12,893,3.12,894,2.724,895,2.724,896,3.12,897,3.12,898,3.12,899,3.12,900,3.355,901,3.12,902,3.12,903,3.12,904,3.12,905,2.724,906,3.12]],["title/classes/File.html",[5,0.082,18,0.189]],["body/classes/File.html",[3,0.194,4,0.194,5,0.158,8,0.012,17,0.194,18,0.3,41,0.011,42,0.011,633,1.585,907,5.679]],["title/controllers/FilesController.html",[0,1.138,908,2.983]],["body/controllers/FilesController.html",[0,1.052,2,1.123,3,0.113,4,0.113,5,0.149,7,0.282,8,0.013,9,0.577,17,0.113,18,0.175,21,1.477,35,1.817,39,1.052,41,0.008,42,0.008,79,1.284,125,0.39,126,1.426,128,0.918,130,1.877,140,1.873,149,1.703,154,1.903,155,0.713,156,0.775,157,1.783,160,2.158,170,2.275,180,2.743,181,1.959,186,3.022,187,1.794,188,1.533,195,2.053,201,1.873,202,1.533,346,1.926,379,1.284,402,2.684,403,2.147,404,2.147,415,1.592,418,2.145,419,1.794,420,3.022,422,1.959,424,3.375,426,2.053,427,2.053,430,1.533,432,1.592,435,1.655,458,3.022,459,2.158,463,2.158,512,2.757,543,3.31,552,3.31,607,2.411,629,2.568,719,2.41,900,2.757,908,3.86,909,3.31,910,2.993,911,6.127,912,3.791,913,3.791,914,3.791,915,5.139,916,3.791,917,3.791,918,6.127,919,3.791,920,4.192,921,3.791,922,4.455,923,3.791,924,4.636,925,5.31,926,3.791,927,3.31,928,3.791,929,3.895,930,3.31,931,4.192,932,3.791,933,2.757,934,2.993,935,3.791,936,3.791,937,3.791,938,3.791,939,3.791,940,3.791,941,4.636,942,5.241,943,4.192,944,3.791,945,3.791,946,3.791,947,3.791,948,2.757,949,2.757,950,3.791,951,3.791,952,3.791,953,3.791,954,3.791,955,3.791,956,3.791,957,3.791]],["title/modules/FilesModule.html",[43,0.968,58,2.778]],["body/modules/FilesModule.html",[2,1.983,3,0.16,4,0.16,5,0.108,7,0.287,8,0.013,9,0.82,17,0.16,18,0.248,41,0.01,42,0.01,43,1.719,45,2.26,46,2.26,47,2.445,48,2.445,49,2.26,50,3.31,51,2.445,58,5.415,66,3.041,67,2.445,68,2.349,70,2.547,195,2.914,219,3.422,518,2.914,610,2.914,908,5.299,929,5.083,930,4.7,933,3.914,958,4.7,959,4.7,960,5.383,961,5.383,962,6.696,963,4.868,964,5.383,965,5.383,966,5.383,967,4.25,968,5.383,969,5.383,970,4.7,971,5.383]],["title/injectables/FilesService.html",[122,0.795,929,2.608]],["body/injectables/FilesService.html",[3,0.138,4,0.138,5,0.15,7,0.249,8,0.013,9,0.706,17,0.138,18,0.214,35,1.948,39,1.022,41,0.009,42,0.009,122,1.18,123,1.682,125,0.477,126,1.634,128,0.984,130,2.104,154,2.068,155,0.775,156,0.842,157,1.937,178,1.373,346,2.208,401,1.532,402,2.917,403,2.461,404,2.461,415,2.555,418,2.277,419,2.881,422,3.144,430,1.875,432,1.947,457,2.918,719,4.763,910,3.661,915,5.307,929,3.869,931,4.805,972,4.048,973,6.087,974,4.637,975,4.637,976,4.637,977,4.637,978,4.637,979,7.492,980,4.637,981,4.637,982,4.637]],["title/classes/HttpExceptionFilter.html",[18,0.189,922,2.983]],["body/classes/HttpExceptionFilter.html",[3,0.155,4,0.155,5,0.131,7,0.239,8,0.013,9,0.79,17,0.155,18,0.239,32,2.021,36,1.883,41,0.01,42,0.01,125,0.534,126,1.757,128,0.682,130,1.393,154,1.487,155,0.558,156,0.606,157,1.393,160,4.079,170,3.927,178,1.537,195,2.81,340,4.097,382,6.258,383,3.514,599,3.541,633,1.264,833,4.432,922,4.758,934,5.166,983,4.531,984,7.167,985,6.544,986,6.571,987,5.659,988,7.526,989,5.189,990,5.189,991,4.531,992,5.189,993,4.531,994,5.189,995,5.189,996,5.189,997,5.189,998,5.189,999,4.531,1000,5.166,1001,5.189,1002,5.189,1003,3.299,1004,5.189,1005,6.544,1006,4.531]],["title/interfaces/IUser.html",[148,1.437,1007,2.608]],["body/interfaces/IUser.html",[3,0.162,4,0.162,5,0.109,8,0.013,17,0.162,39,1.16,41,0.01,42,0.01,43,1.285,125,0.561,148,2.363,155,0.862,156,0.967,157,1.811,275,1.753,315,1.991,325,2.224,328,2.778,333,3.956,642,4.358,742,3.462,1007,3.462,1008,4.3,1009,4.755]],["title/classes/Job.html",[18,0.189,1010,1.942]],["body/classes/Job.html",[3,0.102,4,0.102,5,0.069,7,0.181,8,0.013,17,0.173,18,0.228,32,0.923,39,1.093,41,0.007,42,0.007,73,0.923,81,1.329,109,1.163,125,0.354,128,1.07,149,1.984,155,0.624,156,0.977,275,1.287,302,1.626,315,1.651,325,1.762,329,2.264,387,2.533,457,2.304,469,1.899,474,2.262,497,1.247,500,2.437,522,2.184,571,2.184,606,2.533,624,2.533,630,3.143,631,3.143,632,3.474,633,0.837,636,2.636,637,2.327,638,3.143,639,3.688,642,3.614,643,3.812,648,3.281,654,2.062,655,2.817,656,2.062,657,2.568,679,3.303,685,4.22,686,4.22,687,4.582,688,4.582,689,2.498,692,4.582,693,4.582,695,3.69,1010,2.343,1011,2.498,1012,3.436,1013,3.436,1014,3.436,1015,3.436,1016,3.436,1017,3.436,1018,3.436,1019,3.436,1020,3.436,1021,3.436,1022,3.436,1023,3.436,1024,3.436,1025,3.436,1026,3.436,1027,3.436,1028,3.436,1029,3.436,1030,2.327,1031,2.713,1032,2.327,1033,3]],["title/controllers/JobsController.html",[0,1.138,1034,2.983]],["body/controllers/JobsController.html",[0,1.023,2,1.092,3,0.11,4,0.11,5,0.074,7,0.27,8,0.013,9,0.562,17,0.11,18,0.17,21,1.437,35,1.798,39,1.121,41,0.008,42,0.008,79,1.249,97,2.19,116,2.754,125,0.38,126,1.398,128,0.909,130,1.858,132,2.105,140,1.822,148,2.722,149,1.686,151,1.88,154,1.983,155,0.743,156,0.808,157,1.858,158,1.675,178,1.542,180,2.69,181,2.69,186,3.435,187,1.746,188,1.491,196,1.548,201,1.822,202,1.491,346,2.19,401,1.311,402,2.441,403,2.105,404,2.105,408,1.61,409,2.862,410,3.22,414,2.273,415,1.548,418,2.349,419,1.746,420,2.099,422,1.905,424,2.345,426,1.997,427,1.997,430,1.491,432,1.548,435,1.61,436,2.498,441,3.126,442,2.214,443,2.214,458,2.099,459,2.099,461,2.345,463,2.099,677,4.309,1010,3.567,1034,3.786,1035,3.22,1036,4.766,1037,3.22,1038,5.37,1039,2.345,1040,3.688,1041,5.208,1042,3.688,1043,3.688,1044,3.688,1045,3.22,1046,3.688,1047,5.104,1048,2.682,1049,3.688,1050,3.838,1051,3.22,1052,4.112,1053,3.688,1054,3.688,1055,2.345,1056,3.688,1057,3.688,1058,3.688,1059,2.345,1060,3.688,1061,3.22,1062,3.688]],["title/modules/JobsModule.html",[43,0.968,59,2.778]],["body/modules/JobsModule.html",[2,2.012,3,0.164,4,0.164,5,0.11,7,0.289,8,0.013,9,0.839,17,0.164,18,0.254,41,0.01,42,0.01,43,1.738,45,2.314,46,2.314,47,2.503,48,2.503,49,2.314,50,3.345,51,2.503,59,5.446,66,3.086,67,2.503,68,2.405,70,2.608,72,2.847,73,1.48,155,0.592,472,2.984,474,2.148,1010,2.608,1032,4.601,1034,5.355,1050,5.113,1051,4.812,1063,4.812,1064,4.812,1065,5.511,1066,5.511,1067,4.812,1068,4.351]],["title/injectables/JobsService.html",[122,0.795,1050,2.608]],["body/injectables/JobsService.html",[3,0.091,4,0.091,5,0.061,7,0.272,8,0.013,9,0.466,17,0.091,18,0.141,19,1.838,20,2.065,24,1.656,32,1.613,35,1.812,39,1.043,41,0.007,42,0.007,73,0.821,78,1.447,79,1.837,80,1.447,81,1.457,97,2.852,116,2.926,122,0.881,123,1.109,125,0.315,126,1.221,128,0.884,130,1.724,131,1.835,132,2.194,148,2.608,151,1.722,154,1.929,155,0.723,156,0.786,157,1.807,158,2.916,188,1.236,196,1.284,228,2.937,240,1.656,302,1.447,315,1.411,325,1.986,346,1.649,401,1.144,402,1.838,403,1.838,404,1.838,408,1.984,409,2.368,414,2.368,415,1.909,418,1.779,422,2.349,430,1.236,432,1.284,457,2.441,477,3.104,486,1.58,487,1.835,488,1.74,490,2.223,491,2.223,492,1.389,493,2.071,497,1.649,500,1.284,502,1.835,503,1.835,504,1.835,505,1.835,506,1.835,507,1.835,520,3.253,527,1.835,528,2.729,529,1.835,532,2.414,533,2.414,536,3.589,537,3.589,538,2.729,540,2.729,541,1.835,542,1.835,551,2.414,574,2.462,576,1.835,577,1.835,578,1.835,579,1.835,580,1.835,581,1.656,582,1.835,583,2.414,584,1.835,585,1.835,586,2.414,587,3.589,588,3.589,589,1.835,590,1.835,591,2.414,592,1.656,593,2.223,594,2.223,595,1.944,597,2.729,606,1.335,607,1.389,624,1.335,677,4.039,1010,1.447,1030,2.071,1037,3.969,1038,4.954,1047,4.848,1050,2.89,1052,3.589,1067,2.67,1069,2.67,1070,3.058,1071,3.058,1072,3.969,1073,3.058,1074,3.058,1075,3.058,1076,3.305,1077,3.058,1078,3.058,1079,2.67,1080,4.546,1081,3.058,1082,4.738,1083,4.738,1084,3.058,1085,3.058,1086,3.058,1087,4.546,1088,2.223,1089,3.058]],["title/injectables/JwtAuthGuard.html",[122,0.795,1090,3.239]],["body/injectables/JwtAuthGuard.html",[3,0.187,4,0.1,5,0.067,7,0.244,8,0.013,9,0.509,17,0.1,18,0.289,19,1.351,30,1.651,32,1.865,35,1.485,39,0.456,41,0.007,42,0.007,43,0.788,68,1.458,109,2.122,122,0.94,123,1.212,125,0.344,126,1.534,128,0.751,130,1.303,141,2.638,151,1.991,154,1.637,155,0.614,156,0.667,157,1.534,163,2.638,170,3.763,173,4.154,178,1.437,188,1.351,195,1.809,219,3.985,220,2.917,221,2.296,222,2.197,223,3.528,238,2.124,256,2.124,261,5.21,262,2.263,296,2.005,297,1.901,300,1.901,302,2.704,303,2.005,305,1.901,313,2.917,318,2.917,319,2.917,333,2.506,338,2.916,341,2.917,376,2.627,377,2.274,378,2.638,379,1.934,383,2.263,435,1.458,451,2.761,518,1.809,520,3.605,560,2.263,592,1.809,593,2.429,594,2.429,600,2.124,607,2.204,608,2.429,610,1.809,617,2.917,683,2.124,872,4.236,874,2.638,876,2.917,948,2.429,1006,2.917,1090,4.51,1091,5.474,1092,2.638,1093,2.296,1094,4.852,1095,4.852,1096,4.852,1097,2.917,1098,3.341,1099,4.852,1100,5.21,1101,3.341,1102,4.558,1103,4.852,1104,3.341,1105,5.713,1106,4.852,1107,4.236,1108,2.917,1109,2.638,1110,3.831,1111,3.341,1112,3.528,1113,3.831,1114,3.341,1115,3.341,1116,3.341,1117,2.638,1118,3.341,1119,3.341,1120,2.638,1121,3.341,1122,4.236,1123,2.917,1124,3.341,1125,3.341,1126,2.638,1127,3.341,1128,2.429,1129,4.988,1130,3.341,1131,3.831,1132,4.852,1133,3.831,1134,3.341,1135,3.341,1136,3.341,1137,3.341,1138,3.341,1139,3.341,1140,4.236,1141,3.341,1142,3.341,1143,2.917,1144,4.852,1145,3.341,1146,4.852,1147,3.341,1148,3.341,1149,3.341,1150,3.869,1151,3.341,1152,3.341,1153,3.341,1154,3.341,1155,3.341,1156,3.341,1157,3.341,1158,3.341,1159,3.341,1160,3.341,1161,3.341]],["title/injectables/JwtStrategy.html",[122,0.795,251,2.778]],["body/injectables/JwtStrategy.html",[3,0.124,4,0.124,5,0.084,7,0.273,8,0.013,9,0.636,12,3.855,13,2.063,17,0.124,18,0.192,19,2.294,20,2.577,32,1.731,35,1.085,39,0.774,41,0.008,42,0.008,97,2.339,122,1.1,123,1.515,125,0.43,126,1.524,128,0.746,130,1.121,148,2.424,154,1.626,155,0.777,156,0.663,157,1.524,158,2.577,170,2.506,173,5.029,196,1.753,197,4.133,198,3.296,221,1.976,223,3.036,227,3.296,228,1.822,233,3.843,243,3.036,251,3.843,256,2.654,269,3.645,292,3.296,309,5.029,315,1.475,317,3.645,323,3.036,325,1.788,326,3.645,327,3.645,328,2.624,329,1.278,331,3.036,332,3.645,333,3.33,336,3.645,340,4.48,367,5.629,379,1.921,518,2.261,519,3.036,607,2.928,610,2.261,629,2.828,680,1.896,696,3.036,920,3.296,999,3.645,1093,2.686,1113,4.48,1117,4.48,1143,3.645,1162,3.645,1163,4.955,1164,4.175,1165,4.175,1166,5.675,1167,4.175,1168,4.175,1169,3.645,1170,4.175,1171,4.175,1172,4.175,1173,4.175,1174,3.296,1175,4.175,1176,4.175,1177,4.175,1178,4.175,1179,4.175,1180,4.175,1181,4.175,1182,4.175,1183,4.175,1184,5.675,1185,4.126,1186,4.175,1187,4.175]],["title/injectables/LocalAuthGuard.html",[122,0.795,189,2.983]],["body/injectables/LocalAuthGuard.html",[3,0.186,4,0.186,5,0.125,7,0.267,8,0.012,9,0.948,17,0.186,18,0.287,41,0.011,42,0.011,122,1.417,123,2.258,189,5.315,256,3.957,1092,4.914,1093,3.46,1108,5.434,1188,5.434,1189,7.31]],["title/injectables/LocalStrategy.html",[122,0.795,252,2.778]],["body/injectables/LocalStrategy.html",[3,0.151,4,0.151,5,0.102,7,0.273,8,0.013,9,0.773,14,4.483,17,0.151,18,0.234,19,2.052,32,1.363,35,1.319,39,1.075,41,0.01,42,0.01,97,2.574,122,1.251,123,1.841,125,0.522,126,1.733,128,0.848,130,1.363,151,2.033,154,1.849,155,0.693,156,0.753,157,1.733,178,1.503,185,4.007,228,2.215,233,3.437,252,4.37,256,3.226,294,3.046,295,5.633,309,3.69,376,2.748,377,1.841,378,4.007,379,1.718,435,2.215,607,2.93,706,4.173,1093,3.054,1107,4.431,1113,4.007,1117,4.007,1163,5.633,1169,4.431,1190,4.431,1191,5.075,1192,5.075,1193,6.452,1194,5.075,1195,4.431,1196,5.075,1197,5.075]],["title/controllers/MailController.html",[0,1.138,1198,2.983]],["body/controllers/MailController.html",[0,1.346,2,1.437,3,0.145,4,0.145,5,0.097,7,0.301,8,0.013,9,0.739,17,0.145,18,0.224,21,1.89,41,0.009,42,0.009,73,1.303,78,2.296,79,1.642,80,2.296,81,1.303,92,3.83,97,2.52,125,0.499,126,1.683,128,0.637,130,1.303,140,2.396,149,1.182,178,1.856,186,3.567,187,2.296,188,1.961,201,2.396,202,1.961,315,1.261,435,2.117,449,3.084,477,2.506,486,2.506,858,5.337,1010,3.287,1030,3.285,1198,4.558,1199,4.235,1200,3.527,1201,7.341,1202,4.851,1203,4.851,1204,6.268,1205,4.851,1206,4.415,1207,4.235,1208,4.235,1209,3.527,1210,3.285,1211,3.285,1212,3.83,1213,2.627,1214,3.084,1215,4.235,1216,4.851,1217,4.851,1218,4.851,1219,4.851,1220,4.851,1221,4.851,1222,4.851,1223,4.851,1224,4.851]],["title/modules/MailModule.html",[43,0.968,60,2.778]],["body/modules/MailModule.html",[2,1.741,3,0.131,4,0.131,5,0.118,7,0.297,8,0.013,9,0.67,12,3.65,13,2.173,17,0.131,18,0.203,41,0.009,42,0.009,43,1.562,45,2.467,46,1.846,47,1.997,48,1.997,49,1.846,50,3.006,51,1.997,60,5.131,66,2.669,67,1.997,68,1.919,70,2.782,72,2.272,73,1.181,74,4.64,96,3.472,97,1.596,103,3.472,109,2.241,141,3.472,151,1.261,155,0.632,178,1.303,292,3.472,305,2.503,379,1.489,449,3.736,472,2.381,474,2.29,514,3.472,614,3.84,635,2.272,967,3.472,970,3.84,987,3.472,1003,2.796,1010,2.081,1032,3.98,1068,3.472,1174,4.64,1198,4.813,1200,3.198,1206,4.816,1207,3.84,1209,3.198,1210,2.978,1212,3.472,1213,2.381,1214,2.796,1225,3.84,1226,3.84,1227,4.398,1228,4.398,1229,4.398,1230,5.877,1231,4.398,1232,3.98,1233,4.398,1234,4.398,1235,4.398,1236,4.398,1237,4.398,1238,4.398,1239,3.84,1240,3.84,1241,4.398,1242,4.398,1243,3.84,1244,4.398,1245,4.398,1246,3.84,1247,4.398,1248,4.398,1249,4.398,1250,4.398,1251,3.84]],["title/injectables/MailService.html",[122,0.795,1206,2.608]],["body/injectables/MailService.html",[3,0.124,4,0.124,5,0.083,7,0.279,8,0.013,9,0.635,17,0.124,18,0.192,19,2.292,20,2.925,21,1.624,32,1.941,35,1.083,41,0.008,42,0.008,73,1.119,78,1.973,79,1.411,80,1.973,81,1.119,97,2.337,122,1.099,123,1.512,125,0.429,126,1.522,128,0.745,130,1.119,154,1.195,155,0.609,156,0.487,157,1.119,178,1.234,180,2.153,222,1.46,228,2.811,296,2.501,315,1.083,449,2.65,469,1.364,477,3.941,486,2.153,509,3.291,612,4.121,679,3.934,680,1.893,681,2.153,683,2.65,686,3.03,689,3.03,949,3.03,1010,3.271,1030,2.823,1036,5.085,1072,5.624,1079,3.639,1102,3.03,1120,3.291,1200,4.121,1206,3.603,1208,6.511,1209,3.03,1210,2.823,1211,2.823,1212,3.291,1213,2.257,1214,2.65,1239,3.639,1252,3.639,1253,6.912,1254,4.168,1255,5.624,1256,4.168,1257,4.168,1258,3.639,1259,5.668,1260,4.949,1261,4.168,1262,4.168,1263,4.168,1264,4.168,1265,5.668,1266,4.168,1267,4.168,1268,4.168,1269,4.168,1270,4.168,1271,3.291,1272,4.475,1273,4.168,1274,4.168,1275,4.168,1276,4.168,1277,4.168,1278,4.168,1279,4.168,1280,3.639,1281,4.168,1282,4.168,1283,4.168,1284,4.168,1285,4.168,1286,4.168,1287,4.168,1288,4.168,1289,4.168]],["title/injectables/MulterConfigService.html",[122,0.795,963,2.983]],["body/injectables/MulterConfigService.html",[3,0.105,4,0.105,5,0.152,7,0.249,8,0.013,9,0.539,17,0.105,18,0.163,30,1.747,32,1.728,35,1.533,39,0.805,41,0.007,42,0.007,109,1.711,122,0.979,123,1.283,125,0.364,126,1.357,128,0.775,130,1.357,154,1.013,155,0.634,156,0.59,157,0.949,165,3.994,195,1.914,219,2.248,275,1.314,296,3.54,297,2.012,302,1.673,305,2.012,338,1.484,339,2.792,343,3.087,379,1.197,383,4.61,391,4.412,401,0.89,451,2.876,497,1.283,514,2.792,518,1.914,520,1.914,555,2.736,584,2.122,592,1.914,610,1.914,619,5.619,685,2.571,697,2.792,833,2.395,895,4.412,924,4.412,927,3.087,933,2.571,963,3.675,986,3.087,987,2.792,991,3.087,1003,3.213,1112,2.571,1120,2.792,1122,3.087,1133,2.792,1240,3.087,1243,3.087,1290,3.087,1291,5.898,1292,6.807,1293,5.054,1294,3.536,1295,5.898,1296,5.054,1297,3.536,1298,3.536,1299,3.536,1300,5.054,1301,5.054,1302,5.898,1303,5.054,1304,3.536,1305,6.435,1306,3.536,1307,2.395,1308,3.536,1309,3.536,1310,3.536,1311,3.536,1312,3.536,1313,3.536,1314,5.054,1315,3.536,1316,3.536,1317,3.536,1318,3.536,1319,3.536,1320,3.536,1321,5.898,1322,3.536,1323,3.536,1324,3.536,1325,3.536,1326,3.536,1327,3.536,1328,3.536,1329,3.536,1330,3.536,1331,3.536,1332,3.536,1333,3.536,1334,3.536,1335,3.536,1336,3.087,1337,5.054,1338,3.536,1339,3.536,1340,5.898,1341,3.536,1342,3.536,1343,5.898,1344,3.536,1345,3.536,1346,3.536,1347,5.054,1348,5.054,1349,3.536,1350,3.536,1351,3.536,1352,5.054,1353,3.536,1354,5.054,1355,3.536,1356,3.536,1357,3.536,1358,3.536,1359,3.536,1360,3.536,1361,3.536,1362,3.536,1363,3.536,1364,3.536,1365,3.536,1366,3.536,1367,5.054,1368,3.536,1369,3.536,1370,3.536,1371,3.536,1372,3.536,1373,3.536,1374,5.054,1375,3.536]],["title/classes/Permission.html",[18,0.189,338,1.722]],["body/classes/Permission.html",[3,0.123,4,0.123,5,0.082,7,0.206,8,0.013,17,0.191,18,0.19,32,1.107,39,1.094,41,0.008,42,0.008,43,1.511,73,1.107,81,1.511,109,1.396,125,0.425,128,1.054,149,1.954,155,0.688,156,0.972,275,1.463,315,1.665,325,1.777,329,2.275,338,2.362,387,2.795,474,2.193,500,2.689,606,2.795,624,2.795,630,3.468,631,3.468,632,3.376,633,1.005,638,3.468,639,3.655,642,3.645,643,3.844,648,2.907,654,2.475,655,3.202,656,2.475,657,2.59,742,4.072,743,4.338,809,2.792,826,2.998,1376,2.998,1377,4.123,1378,4.123,1379,4.123,1380,4.123,1381,4.123,1382,4.123,1383,4.123,1384,4.123,1385,4.123,1386,4.123,1387,4.123,1388,3.6]],["title/controllers/PermissionsController.html",[0,1.138,1389,2.983]],["body/controllers/PermissionsController.html",[0,1.038,2,1.108,3,0.112,4,0.112,5,0.075,7,0.271,8,0.013,9,0.57,17,0.112,18,0.172,21,1.458,35,1.808,39,1.123,41,0.008,42,0.008,79,1.267,116,2.771,125,0.385,126,1.413,128,0.914,130,1.868,132,2.127,140,1.849,148,2.73,149,1.695,151,2.338,154,1.993,155,0.747,156,0.812,157,1.868,178,1.558,180,3.143,181,2.718,187,1.771,188,1.513,196,1.571,201,1.849,202,1.513,333,3.143,338,3.176,346,2.207,401,1.531,402,2.46,403,2.127,404,2.127,408,1.633,409,2.881,414,2.296,415,1.571,418,2.24,419,1.771,420,2.13,422,1.933,424,2.379,426,2.026,427,2.026,430,1.513,432,1.571,435,1.633,441,3.158,442,2.246,443,2.246,458,2.13,459,2.13,461,2.379,463,2.13,739,4.585,1039,2.379,1048,2.721,1055,2.379,1059,2.379,1389,3.825,1390,3.267,1391,3.267,1392,3.742,1393,2.534,1394,3.563,1395,3.742,1396,2.721,1397,3.742,1398,2.721,1399,3.742,1400,5.122,1401,3.742,1402,3.868,1403,3.267,1404,4.154,1405,3.742,1406,3.742,1407,3.742,1408,3.742,1409,3.742,1410,3.742,1411,2.721,1412,3.742]],["title/modules/PermissionsModule.html",[43,0.968,61,2.778]],["body/modules/PermissionsModule.html",[2,2,3,0.163,4,0.163,5,0.109,7,0.288,8,0.013,9,0.831,17,0.163,18,0.252,41,0.01,42,0.01,43,1.73,45,2.292,46,2.292,47,2.479,48,2.479,49,2.292,50,3.331,51,2.479,61,5.434,66,3.068,67,2.479,68,2.382,70,2.584,72,2.82,73,1.466,155,0.587,338,2.292,472,2.956,474,2.127,809,4.574,814,4.31,1389,5.333,1402,5.101,1403,4.766,1413,4.766,1414,4.766,1415,5.459,1416,5.459,1417,4.766]],["title/injectables/PermissionsService.html",[122,0.795,1402,2.608]],["body/injectables/PermissionsService.html",[3,0.082,4,0.082,5,0.055,7,0.26,8,0.013,9,0.421,17,0.082,18,0.127,19,1.704,20,1.256,24,1.497,30,3.328,32,1.809,35,1.598,39,1.021,41,0.006,42,0.006,73,0.742,78,1.309,79,1.729,80,1.309,81,1.371,97,2.801,111,4.032,116,2.828,122,0.817,123,1.003,125,0.285,126,1.132,128,0.851,130,1.651,132,1.118,148,2.543,151,2.039,154,1.856,155,0.696,156,0.756,157,1.739,158,2.792,178,1.691,196,1.161,221,1.309,228,2.94,240,1.497,300,2.398,315,1.327,325,2.013,329,1.983,338,2.144,346,1.853,376,3.092,387,1.207,394,3.246,401,1.061,402,1.704,403,1.704,404,1.704,408,1.839,409,2.228,414,2.228,415,1.769,418,1.995,430,1.118,432,1.161,457,2.35,469,1.671,477,2.95,486,1.428,487,1.659,488,1.574,492,2.942,497,1.529,500,1.161,501,3.458,502,1.659,503,1.659,504,1.659,505,1.659,506,1.659,507,1.659,513,1.873,527,1.659,528,2.529,529,1.659,538,2.529,540,2.529,541,1.659,542,1.659,574,2.282,576,1.659,577,1.659,578,1.659,579,1.659,580,1.659,581,1.497,582,1.659,584,1.659,585,1.659,589,1.659,590,1.659,595,1.758,596,3.713,597,3.065,598,2.01,599,2.522,600,3.246,601,3.458,606,1.207,624,1.207,739,4.282,742,3.246,743,3.458,820,3.679,826,2.01,835,2.414,842,4.509,1076,3.064,1088,3.064,1150,2.854,1307,1.873,1391,3.679,1400,4.703,1402,2.679,1404,3.327,1417,2.414,1418,2.414,1419,2.765,1420,2.765,1421,2.765,1422,2.765,1423,2.765,1424,2.765,1425,2.414,1426,2.765,1427,2.765,1428,2.765,1429,2.765,1430,2.765,1431,2.765,1432,2.765,1433,2.765,1434,2.765,1435,2.765,1436,2.01,1437,4.458,1438,4.458,1439,2.765,1440,3.327,1441,4.214,1442,2.765]],["title/classes/RegisterUserDto.html",[18,0.189,176,2.221]],["body/classes/RegisterUserDto.html",[3,0.097,4,0.097,5,0.065,7,0.226,8,0.013,17,0.168,18,0.327,21,1.852,36,2.917,39,1.103,41,0.007,42,0.007,81,1.276,125,0.334,128,0.903,149,1.676,155,0.783,156,0.85,176,2.573,192,1.949,193,4.263,194,1.758,202,1.313,222,2.856,275,1.235,294,2.852,304,1.265,315,1.963,325,0.901,328,2.039,329,1.72,377,2.945,379,1.099,401,0.817,418,0.962,457,2.039,469,2.024,492,1.475,511,2.903,555,3.043,607,1.475,633,0.791,635,3.669,636,2.158,639,1.417,657,1.921,661,3.526,666,1.949,670,3.349,671,3.021,672,3.021,673,3.373,674,3.021,675,1.363,676,1.758,678,3.543,680,2.809,681,2.903,700,2.064,703,4.086,704,2.852,705,1.758,706,4.023,707,4.263,708,4.263,709,3.455,710,2.361,711,2.361,714,3.252,755,2.564,1443,3.247,1444,3.247,1445,3.247,1446,3.247,1447,3.247,1448,3.247]],["title/interfaces/Response.html",[160,2.335,1007,2.608]],["body/interfaces/Response.html",[0,1.604,3,0.128,4,0.128,5,0.086,7,0.267,8,0.013,9,0.654,17,0.172,18,0.198,35,1.7,36,2.649,39,0.892,41,0.009,42,0.009,122,1.121,125,0.442,156,0.763,157,1.756,160,3.981,165,2.907,188,1.735,221,2.736,261,5.087,262,2.907,264,2.907,275,1.503,302,3.311,303,3.47,304,3.046,305,3.29,307,3.54,379,2.213,435,1.873,451,2.442,452,3.388,457,2.372,497,1.557,520,2.324,560,2.907,563,3.388,574,2.324,581,2.324,592,2.324,629,2.907,632,1.949,680,1.949,833,2.907,942,4.565,943,3.388,948,3.12,949,4.204,1000,5.765,1007,3.676,1008,3.388,1100,4.204,1102,3.12,1112,3.12,1128,3.12,1131,3.388,1185,3.12,1214,2.728,1271,4.565,1272,4.565,1449,3.388,1450,5.048,1451,5.048,1452,5.048,1453,3.388,1454,3.747,1455,4.204,1456,3.12,1457,3.747,1458,5.048,1459,3.388,1460,3.747,1461,5.523,1462,3.747,1463,3.747,1464,3.747,1465,3.747,1466,3.747,1467,5.048,1468,3.747,1469,3.747,1470,3.747]],["title/classes/Resume.html",[18,0.189,1471,2.462]],["body/classes/Resume.html",[3,0.102,4,0.102,5,0.069,7,0.232,8,0.013,17,0.173,18,0.228,32,0.92,39,1.056,41,0.007,42,0.007,73,0.92,81,1.327,105,3.924,109,1.16,125,0.353,128,1.045,149,1.938,156,0.975,275,1.284,302,1.621,314,2.491,315,1.877,325,1.759,329,2.144,387,2.529,469,1.121,473,2.991,474,2.258,497,1.243,500,2.433,522,2.178,571,2.178,599,3.133,606,2.768,624,2.529,630,3.434,631,3.137,632,3.279,633,0.835,638,3.434,639,3.625,642,3.609,643,4.204,648,2.552,654,2.056,655,2.811,656,2.056,657,3.191,751,4.611,752,4.213,753,4.213,761,2.491,762,2.705,763,2.705,764,2.705,1010,2.742,1031,2.705,1068,2.705,1210,2.32,1471,2.965,1472,2.491,1473,5.059,1474,5.309,1475,5.309,1476,3.426,1477,3.426,1478,3.426,1479,3.426,1480,3.426,1481,3.426,1482,3.426,1483,3.426,1484,3.426,1485,3.426,1486,3.426,1487,3.426,1488,3.426,1489,3.426,1490,3.426,1491,2.705,1492,3.426,1493,3.426,1494,3.426,1495,3.426,1496,2.991,1497,3.426,1498,2.491,1499,2.991]],["title/controllers/ResumesController.html",[0,1.138,1500,2.983]],["body/controllers/ResumesController.html",[0,0.967,2,1.033,3,0.104,4,0.104,5,0.07,7,0.258,8,0.013,9,0.531,17,0.104,18,0.161,21,1.359,35,1.832,39,1.126,41,0.007,42,0.007,79,1.181,116,2.685,125,0.359,126,1.344,128,0.926,130,1.893,132,2.023,140,1.723,148,2.774,149,1.717,151,2.338,154,2.02,155,0.757,156,0.823,157,1.893,178,1.482,180,1.802,181,2.585,187,1.651,188,1.41,196,1.464,201,1.723,202,1.41,314,2.536,346,2.123,401,1.26,402,2.366,403,2.023,404,2.023,408,1.522,409,2.791,414,2.184,415,1.464,418,2.273,419,1.651,420,1.985,422,1.802,424,2.217,426,1.888,427,1.888,430,1.41,435,1.522,436,2.362,441,3.513,442,2.093,443,2.093,458,2.848,459,1.985,461,2.217,463,1.985,599,3.482,765,4.48,857,3.045,1038,4.331,1039,2.217,1048,2.536,1055,2.217,1059,2.217,1393,2.362,1394,3.389,1396,2.536,1398,2.536,1411,2.536,1471,4.457,1500,3.639,1501,3.045,1502,5.912,1503,5.005,1504,3.045,1505,3.488,1506,3.488,1507,3.488,1508,5.005,1509,3.488,1510,3.488,1511,3.488,1512,3.488,1513,3.488,1514,3.721,1515,3.045,1516,2.754,1517,3.488,1518,3.488,1519,3.488,1520,3.488,1521,3.488,1522,3.488,1523,3.488,1524,3.045,1525,3.488,1526,3.488,1527,3.488,1528,3.488,1529,3.488,1530,3.488,1531,3.488,1532,3.488,1533,3.488,1534,3.488,1535,3.488,1536,3.488]],["title/modules/ResumesModule.html",[43,0.968,62,2.778]],["body/modules/ResumesModule.html",[2,2.006,3,0.164,4,0.164,5,0.11,7,0.288,8,0.013,9,0.835,17,0.164,18,0.253,41,0.01,42,0.01,43,1.734,45,2.303,46,2.303,47,2.491,48,2.491,49,2.303,50,3.338,51,2.491,62,5.44,66,3.077,67,2.491,68,2.394,70,2.596,72,2.833,73,1.473,155,0.589,472,2.97,474,2.137,1471,3.292,1498,4.925,1500,5.344,1514,5.107,1515,4.789,1537,4.789,1538,4.789,1539,5.485,1540,5.485,1541,4.789,1542,5.485]],["title/injectables/ResumesService.html",[122,0.795,1514,2.608]],["body/injectables/ResumesService.html",[3,0.079,4,0.079,5,0.053,7,0.257,8,0.013,9,0.403,17,0.079,18,0.122,19,1.648,20,1.851,24,1.434,32,1.839,35,1.655,39,1.045,41,0.006,42,0.006,73,0.711,78,1.253,79,1.683,80,1.253,81,1.335,97,2.843,105,2.761,116,2.785,122,0.79,123,0.961,125,0.273,126,1.095,128,0.872,130,1.71,131,1.589,132,1.07,148,2.629,151,2.092,154,1.901,155,0.755,156,0.775,157,1.781,158,2.892,178,1.785,196,1.112,228,2.895,300,1.507,315,1.724,325,2.025,337,2.312,346,1.479,376,2.691,387,1.779,394,3.549,401,1.026,402,1.648,403,1.648,404,1.648,408,1.779,409,2.169,414,2.169,415,1.711,418,1.886,419,1.929,422,2.106,430,1.07,432,1.112,457,2.31,469,1.627,477,2.884,486,1.368,487,1.589,488,1.507,490,1.925,491,1.925,492,1.202,493,1.793,497,1.803,500,1.112,501,3.366,502,1.589,503,2.447,504,1.589,505,1.589,506,1.589,507,1.589,513,1.793,527,1.589,528,2.447,529,1.589,538,2.447,540,2.447,541,1.589,542,1.589,574,2.207,576,1.589,577,1.589,578,1.589,579,1.589,580,1.589,581,1.434,582,1.589,585,1.589,589,1.589,590,1.589,595,3.16,596,3.614,597,2.983,598,3.614,599,3.606,600,3.16,601,3.366,606,2.169,612,1.925,624,1.155,632,1.851,638,2.207,751,3.614,752,3.614,753,2.964,761,2.964,765,4.048,850,2.312,862,2.964,863,2.09,1003,2.592,1436,1.925,1471,1.589,1473,3.559,1491,2.09,1504,3.559,1514,2.592,1516,3.218,1524,2.312,1541,2.312,1543,2.312,1544,4.077,1545,2.648,1546,2.648,1547,4.077,1548,2.648,1549,2.648,1550,4.077,1551,2.648,1552,2.648,1553,2.648,1554,2.648,1555,1.925,1556,2.648,1557,2.648,1558,2.648,1559,2.648,1560,2.648,1561,4.077,1562,2.648,1563,2.648,1564,2.312,1565,2.648,1566,2.648,1567,4.077,1568,4.077,1569,2.648,1570,2.648]],["title/classes/Role.html",[18,0.189,328,1.488]],["body/classes/Role.html",[3,0.12,4,0.12,5,0.081,7,0.231,8,0.013,17,0.189,18,0.186,32,1.082,39,1.032,41,0.008,42,0.008,73,1.082,81,1.487,109,1.364,125,0.415,128,1.049,149,1.946,155,0.68,156,0.973,275,1.44,315,1.645,325,1.756,328,2.01,329,2.26,333,3.269,338,1.692,387,2.762,474,2.158,500,2.657,606,2.762,624,2.762,630,3.69,631,3.427,632,3.353,633,0.982,636,2.874,638,3.427,639,3.636,642,3.602,643,4.09,648,3.521,654,2.418,655,3.152,656,2.418,657,2.985,695,4.024,810,2.93,811,2.562,814,3.181,827,2.729,1474,4.373,1475,4.373,1571,2.93,1572,4.03,1573,4.03,1574,4.03,1575,4.03,1576,4.03,1577,4.03,1578,4.03,1579,4.03,1580,4.03,1581,4.03,1582,4.03,1583,3.518]],["title/controllers/RolesController.html",[0,1.138,1584,2.983]],["body/controllers/RolesController.html",[0,1.041,2,1.112,3,0.112,4,0.112,5,0.075,7,0.271,8,0.013,9,0.572,17,0.112,18,0.173,21,1.463,35,1.81,39,1.124,41,0.008,42,0.008,79,1.271,116,2.775,125,0.387,126,1.416,128,0.915,130,1.87,132,2.132,140,1.855,148,2.732,149,1.697,151,2.339,154,1.996,155,0.748,156,0.813,157,1.87,178,1.562,180,2.724,181,2.724,187,1.777,188,1.518,196,1.576,197,3.3,201,1.855,202,1.518,328,1.913,338,3.031,346,2.211,401,1.327,402,2.464,403,2.132,404,2.132,408,1.638,409,2.885,414,2.301,415,1.576,418,2.242,419,1.777,420,2.137,422,1.939,424,2.387,426,2.033,427,2.033,430,1.518,432,1.576,435,1.638,436,2.543,441,3.165,442,2.253,443,2.253,458,2.137,459,2.137,461,2.387,463,2.137,766,4.59,860,4.812,1039,2.387,1048,2.73,1055,2.387,1059,2.387,1393,2.543,1394,3.571,1396,2.73,1398,2.73,1411,2.73,1584,3.834,1585,3.278,1586,3.278,1587,3.754,1588,3.754,1589,3.754,1590,3.754,1591,5.127,1592,3.754,1593,3.278,1594,4.163,1595,3.754,1596,3.754,1597,3.754,1598,3.754,1599,3.754,1600,3.754,1601,3.754]],["title/modules/RolesModule.html",[43,0.968,63,2.462]],["body/modules/RolesModule.html",[2,1.974,3,0.159,4,0.159,5,0.107,7,0.286,8,0.013,9,0.814,17,0.159,18,0.246,41,0.01,42,0.01,43,1.714,45,2.244,46,2.244,47,2.428,48,2.428,49,2.244,50,3.3,51,3.3,63,4.859,66,3.028,67,2.428,68,2.333,70,2.53,72,2.761,73,1.435,155,0.574,197,4.546,328,1.939,472,2.894,474,2.083,811,4.238,815,3.886,1584,5.282,1593,4.667,1602,4.667,1603,4.667,1604,4.667,1605,5.345,1606,5.345,1607,4.667]],["title/injectables/RolesService.html",[122,0.795,197,2.221]],["body/injectables/RolesService.html",[3,0.08,4,0.08,5,0.054,7,0.264,8,0.013,9,0.41,17,0.08,18,0.124,19,1.669,20,1.222,24,1.457,30,2.782,32,1.849,35,1.579,39,1.015,41,0.006,42,0.006,43,0.635,73,0.723,78,1.274,79,1.7,80,1.274,81,1.348,97,2.787,111,2.124,116,2.801,122,0.8,123,0.976,125,0.277,126,1.108,128,0.842,130,1.631,132,1.088,148,2.524,151,2.023,154,1.837,155,0.788,156,0.748,157,1.721,158,2.758,178,1.799,196,1.13,197,2.235,219,1.711,228,3.004,240,2.719,300,1.531,315,1.305,325,1.999,328,2.043,329,1.263,333,1.39,346,1.497,376,3.288,387,1.174,394,3.192,401,1.039,402,1.669,403,1.669,404,1.669,408,1.801,409,2.191,414,2.191,415,1.733,418,1.487,430,1.088,432,1.13,457,2.325,469,1.643,474,1.049,477,2.909,486,1.39,487,1.615,488,1.531,492,1.875,497,2.498,500,1.13,501,3.4,502,1.615,503,1.615,504,1.615,505,1.615,506,1.615,507,1.615,512,1.956,513,1.822,518,1.457,527,1.615,528,2.477,529,1.615,538,2.477,540,2.477,541,1.615,542,1.615,574,2.235,576,1.615,577,1.615,578,1.615,579,1.615,580,1.615,581,1.457,582,1.615,584,1.615,585,1.615,589,1.615,590,1.615,595,1.711,596,3.651,597,3.014,598,1.956,599,2.48,600,3.192,601,3.4,606,1.174,610,1.457,624,1.174,639,1.174,742,1.711,743,1.822,766,4.242,821,3.259,827,1.822,829,3.001,836,2.124,842,3.259,862,1.956,863,3.259,870,2.349,879,2.124,1003,1.711,1076,3.001,1088,3.001,1126,2.124,1150,2.795,1307,1.822,1425,3.604,1436,1.956,1437,2.349,1438,2.349,1440,3.259,1586,3.604,1591,4.662,1594,3.259,1607,2.349,1608,2.349,1609,2.691,1610,2.691,1611,2.691,1612,2.691,1613,2.691,1614,2.691,1615,2.691,1616,2.349,1617,2.691,1618,2.691,1619,2.691,1620,2.691,1621,2.691,1622,2.691,1623,2.691,1624,2.691,1625,2.691,1626,2.691,1627,2.124,1628,2.691,1629,2.349,1630,2.691,1631,2.691,1632,4.128,1633,2.691,1634,2.691,1635,2.691,1636,2.691,1637,2.691,1638,2.349,1639,2.691,1640,2.691]],["title/classes/Subscriber.html",[18,0.189,1213,2.221]],["body/classes/Subscriber.html",[3,0.125,4,0.125,5,0.084,7,0.236,8,0.013,17,0.192,18,0.193,32,1.123,39,1.075,41,0.008,42,0.008,73,1.123,81,1.526,109,1.416,125,0.431,128,1.047,149,1.941,155,0.694,156,0.97,275,1.477,315,1.941,325,1.79,329,2.285,338,1.756,387,2.816,474,2.214,500,2.709,606,2.816,624,2.816,630,3.748,631,3.494,632,3.391,633,1.019,638,3.494,639,3.639,642,3.672,643,3.873,648,2.935,654,2.51,655,3.234,656,2.51,657,2.609,679,3.672,810,3.041,1211,2.833,1213,3.077,1232,2.833,1641,3.041,1642,4.183,1643,4.183,1644,4.183,1645,4.183,1646,4.183,1647,4.183,1648,4.183,1649,4.183,1650,4.183,1651,4.183,1652,3.652]],["title/controllers/SubscribersController.html",[0,1.138,1653,2.983]],["body/controllers/SubscribersController.html",[0,0.996,2,1.063,3,0.107,4,0.107,5,0.072,7,0.268,8,0.013,9,0.547,17,0.107,18,0.165,21,1.399,35,1.85,39,1.101,41,0.008,42,0.008,79,1.216,116,2.721,125,0.37,126,1.372,128,0.935,130,1.911,132,2.066,140,1.774,148,2.788,149,1.734,151,2.347,154,2.04,155,0.765,156,0.831,157,1.911,178,1.513,180,3.073,181,3.073,187,1.699,188,1.452,196,1.508,201,1.774,202,1.452,346,2.158,401,1.497,402,2.405,403,2.066,404,2.066,408,1.567,409,2.828,414,2.23,415,1.508,418,2.108,419,1.699,420,2.043,426,2.767,427,1.944,430,1.452,432,1.508,435,1.567,441,3.067,442,2.155,443,2.155,458,2.043,459,2.043,463,2.043,679,2.908,777,4.524,1039,2.283,1055,2.283,1059,2.283,1213,4.052,1260,5.194,1393,2.432,1394,3.46,1396,2.611,1398,2.611,1411,2.611,1653,3.715,1654,3.135,1655,5.11,1656,3.135,1657,3.591,1658,3.591,1659,3.591,1660,3.591,1661,3.591,1662,5.11,1663,3.591,1664,3.591,1665,3.135,1666,4.82,1667,3.591,1668,3.591,1669,3.782,1670,3.135,1671,4.034,1672,4.696,1673,3.591,1674,3.591,1675,3.591,1676,3.591,1677,3.591,1678,3.591,1679,3.591,1680,3.591,1681,3.591,1682,3.591]],["title/modules/SubscribersModule.html",[43,0.968,64,2.778]],["body/modules/SubscribersModule.html",[2,1.986,3,0.161,4,0.161,5,0.108,7,0.293,8,0.013,9,0.822,17,0.161,18,0.249,41,0.01,42,0.01,43,1.721,45,2.265,46,2.265,47,2.45,48,2.45,49,2.265,50,3.313,51,2.45,64,5.418,66,3.045,67,2.45,68,2.354,70,2.553,72,2.787,73,1.449,155,0.58,472,2.921,474,2.102,1010,2.553,1210,3.654,1213,2.921,1232,4.541,1251,4.711,1653,5.305,1669,5.086,1670,4.711,1683,4.711,1684,4.711,1685,5.395,1686,5.395,1687,4.711]],["title/injectables/SubscribersService.html",[122,0.795,1669,2.608]],["body/injectables/SubscribersService.html",[3,0.084,4,0.084,5,0.057,7,0.262,8,0.013,9,0.431,17,0.084,18,0.131,19,1.736,20,1.287,24,1.534,32,1.824,35,1.7,39,0.977,41,0.006,42,0.006,73,0.761,78,1.341,79,1.755,80,1.341,81,1.392,97,2.873,109,0.959,116,2.852,122,0.832,123,1.028,125,0.292,126,1.153,128,0.892,130,1.756,132,1.145,148,2.667,151,2.127,154,1.947,155,0.752,156,0.793,157,1.824,158,2.97,178,1.535,196,1.189,228,3.053,240,1.534,300,2.443,315,1.766,325,1.941,329,1.314,346,1.88,376,2.806,387,1.236,394,3.295,401,1.08,402,1.736,403,1.736,404,1.736,408,1.873,409,2.262,414,2.262,418,1.712,430,1.145,432,1.189,457,2.372,477,2.987,486,1.463,487,1.7,488,1.612,496,2.473,497,1.557,500,1.189,501,3.916,502,1.7,503,1.7,504,1.7,505,1.7,506,1.7,507,1.7,511,1.463,513,1.918,527,1.7,528,2.576,529,1.7,538,2.576,540,2.576,541,1.7,542,1.7,574,2.324,576,1.7,577,1.7,578,1.7,579,1.7,580,1.7,581,1.534,582,1.7,584,3.111,585,1.7,589,1.7,590,1.7,597,2.576,599,2.12,600,2.729,601,2.907,606,1.236,607,2.354,624,1.236,679,1.612,777,4.157,1076,3.121,1088,3.121,1133,3.389,1150,2.907,1211,1.918,1213,2.324,1255,3.748,1258,2.473,1307,3.51,1436,2.06,1440,3.389,1656,3.748,1665,3.748,1666,4.428,1669,2.729,1671,3.389,1687,2.473,1688,2.473,1689,4.293,1690,2.833,1691,2.833,1692,2.833,1693,2.833,1694,4.293,1695,2.833,1696,4.293,1697,2.833,1698,2.833,1699,2.833,1700,4.293,1701,4.293,1702,2.833,1703,2.833,1704,2.833,1705,2.833,1706,2.833,1707,2.833,1708,2.833,1709,2.833,1710,4.293,1711,2.833,1712,4.293,1713,2.833,1714,2.833,1715,2.833]],["title/injectables/TransformInterceptor.html",[122,0.795,1456,2.983]],["body/injectables/TransformInterceptor.html",[0,1.582,3,0.125,4,0.125,5,0.084,7,0.265,8,0.013,9,0.641,17,0.17,18,0.194,19,1.7,35,1.682,36,2.069,39,0.574,41,0.008,42,0.008,122,1.105,123,1.526,125,0.433,126,1.531,128,0.749,130,1.129,154,1.635,155,0.613,156,0.666,157,1.738,160,3.683,165,2.848,188,1.7,221,2.699,261,5.561,262,2.848,264,2.848,302,3.284,303,3.423,304,2.826,305,3.246,307,3.504,379,2.191,435,1.835,451,2.393,452,3.321,457,1.526,497,1.526,520,2.277,560,2.848,563,3.321,574,2.277,581,2.277,592,2.277,629,2.848,632,1.91,680,1.91,833,2.848,942,4.503,943,3.321,948,3.058,949,4.147,1000,4.503,1007,3.626,1097,3.672,1100,5.045,1102,4.147,1112,3.058,1128,3.058,1131,3.321,1185,3.058,1214,2.674,1271,4.503,1272,4.503,1449,3.321,1450,4.979,1451,6.058,1452,5.65,1453,3.321,1454,3.672,1455,4.147,1456,4.147,1457,5.65,1458,6.058,1459,3.321,1460,3.672,1461,5.478,1462,3.672,1463,3.672,1464,3.672,1465,3.672,1466,3.672,1467,4.979,1468,3.672,1469,3.672,1470,3.672,1716,4.206,1717,4.206,1718,4.206]],["title/classes/UpdateCompanyDto.html",[18,0.189,423,2.778]],["body/classes/UpdateCompanyDto.html",[3,0.169,4,0.169,5,0.113,7,0.273,8,0.013,17,0.169,18,0.318,36,2.053,39,0.942,41,0.01,42,0.01,125,0.583,128,0.744,149,1.379,156,0.661,222,2.42,275,1.795,325,2.207,377,2.505,401,1.424,406,3.598,423,4.677,431,4.468,566,2.924,633,1.379,661,3.014,675,2.376,678,3.014,713,4.468,714,2.796,1093,3.268,1719,6.03,1720,6.906,1721,5.66,1722,3.397,1723,3.064]],["title/classes/UpdateFileDto.html",[18,0.189,915,2.778]],["body/classes/UpdateFileDto.html",[3,0.185,4,0.185,5,0.124,7,0.267,8,0.012,17,0.185,18,0.286,41,0.011,42,0.011,401,1.562,566,3.207,633,1.513,719,3.946,721,4.901,915,4.943,931,4.901,1093,3.454,1722,3.726,1723,3.361,1724,5.42,1725,7.299]],["title/classes/UpdateJobDto.html",[18,0.189,1047,2.778]],["body/classes/UpdateJobDto.html",[3,0.185,4,0.185,5,0.124,7,0.267,8,0.012,17,0.185,18,0.286,41,0.011,42,0.011,401,1.562,566,3.207,633,1.513,660,4.513,677,3.726,1047,4.943,1052,4.901,1093,3.454,1722,3.726,1723,3.361,1726,5.42,1727,7.299]],["title/classes/UpdatePermissionDto.html",[18,0.189,1400,2.778]],["body/classes/UpdatePermissionDto.html",[3,0.185,4,0.185,5,0.124,7,0.267,8,0.012,17,0.185,18,0.286,41,0.011,42,0.011,401,1.562,566,3.207,633,1.513,739,3.946,741,4.901,1093,3.454,1400,4.943,1404,4.901,1722,3.726,1723,3.361,1728,5.42,1729,7.299]],["title/classes/UpdateResumeDto.html",[18,0.189,1555,2.983]],["body/classes/UpdateResumeDto.html",[3,0.185,4,0.185,5,0.124,7,0.267,8,0.012,17,0.185,18,0.286,41,0.011,42,0.011,401,1.562,566,3.207,633,1.513,748,4.204,750,4.513,1093,3.454,1516,4.901,1555,5.307,1722,3.726,1723,3.361,1730,5.42,1731,7.299]],["title/classes/UpdateRoleDto.html",[18,0.189,1591,2.778]],["body/classes/UpdateRoleDto.html",[3,0.185,4,0.185,5,0.124,7,0.267,8,0.012,17,0.185,18,0.286,41,0.011,42,0.011,401,1.562,566,3.207,633,1.513,766,3.946,768,4.901,1093,3.454,1591,4.943,1594,4.901,1722,3.726,1723,3.361,1732,5.42,1733,7.299]],["title/classes/UpdateSubscriberDto.html",[18,0.189,1666,2.778]],["body/classes/UpdateSubscriberDto.html",[3,0.185,4,0.185,5,0.124,7,0.267,8,0.012,17,0.185,18,0.286,41,0.011,42,0.011,401,1.562,566,3.207,633,1.513,777,3.946,779,4.901,1093,3.454,1666,4.943,1671,4.901,1722,3.726,1723,3.361,1734,5.42,1735,7.299]],["title/classes/UpdateUserDto.html",[18,0.189,1736,2.778]],["body/classes/UpdateUserDto.html",[3,0.16,4,0.16,5,0.107,7,0.266,8,0.013,17,0.16,18,0.308,32,1.953,36,1.944,39,0.911,41,0.01,42,0.01,125,0.552,128,0.704,149,1.305,155,0.576,156,0.626,194,2.901,222,2.339,275,1.736,325,2.173,377,2.422,401,1.348,545,5.829,566,2.768,613,5.829,633,1.305,661,2.914,675,2.249,678,2.914,700,3.406,705,2.901,706,3.615,714,2.647,1093,3.16,1723,2.901,1736,4.521,1737,5.829,1738,7.273,1739,5.358,1740,5.358,1741,5.358,1742,5.358,1743,5.358,1744,5.358,1745,6.676]],["title/classes/User.html",[18,0.189,151,1.176]],["body/classes/User.html",[3,0.103,4,0.103,5,0.069,7,0.213,8,0.013,17,0.174,18,0.23,32,0.931,39,1.101,41,0.007,42,0.007,73,0.931,81,1.338,109,2.287,125,0.357,128,1.06,149,1.967,151,1.428,155,0.627,156,0.976,235,4.241,275,1.295,302,1.641,315,1.884,325,1.769,328,2.314,329,2.27,387,2.546,457,1.808,469,1.909,474,2.273,497,1.258,500,2.449,522,2.204,571,2.204,606,2.546,624,2.546,630,3.158,631,3.158,632,3.194,633,0.845,635,3.013,638,3.158,639,3.647,642,3.629,643,4.054,648,2.574,654,2.081,655,2.836,656,2.081,657,2.93,706,3.158,707,3.501,708,3.501,807,2.348,812,2.348,815,2.521,828,2.521,1031,2.737,1474,3.934,1475,3.934,1746,2.521,1747,3.467,1748,3.467,1749,3.467,1750,3.467,1751,3.467,1752,3.467,1753,3.467,1754,4.983,1755,3.467,1756,3.467,1757,3.467,1758,3.467,1759,3.467,1760,3.467,1761,3.467,1762,3.467,1763,3.467,1764,4.983,1765,3.467,1766,3.027]],["title/classes/UserLoginDto.html",[18,0.189,192,2.462]],["body/classes/UserLoginDto.html",[3,0.107,4,0.107,5,0.072,7,0.237,8,0.013,17,0.178,18,0.338,21,2.776,36,2.944,39,1.101,41,0.008,42,0.008,81,1.375,125,0.371,128,0.673,149,1.248,155,0.737,156,0.758,176,1.95,192,3.074,193,3.576,194,1.95,202,1.456,222,2.81,275,1.331,294,4.115,304,1.404,315,1.852,325,0.999,328,2.162,329,1.824,377,2.889,379,1.219,401,0.907,418,1.067,457,1.858,469,2.124,492,1.636,511,2.645,555,2.773,607,1.636,633,0.878,635,3.352,636,2.947,639,1.572,657,2.07,661,3.575,666,2.162,670,3.226,671,3.256,672,3.256,673,3.576,674,3.256,675,1.512,676,1.95,678,3.475,680,2.706,681,3.078,700,2.29,703,4.332,704,3.074,705,1.95,706,4.126,707,3.895,708,3.895,709,3.723,710,3.723,711,3.723,1767,5.121,1768,3.602,1769,3.602]],["title/controllers/UsersController.html",[0,1.138,1770,2.983]],["body/controllers/UsersController.html",[0,0.9,2,0.96,3,0.097,4,0.097,5,0.065,7,0.26,8,0.013,9,0.494,16,2.56,17,0.097,18,0.149,21,1.264,32,1.66,35,1.71,39,1.09,41,0.007,42,0.007,79,1.098,97,2.037,116,2.595,125,0.334,126,1.275,128,0.864,130,1.766,132,1.919,140,1.602,148,2.645,149,1.603,151,2.259,154,1.885,155,0.707,156,0.768,157,1.766,158,1.473,178,1.406,180,3.193,181,2.901,186,2.702,187,1.535,188,1.311,194,2.57,201,1.602,202,1.311,205,2.901,221,2.925,222,1.663,228,1.415,232,2.358,240,2.57,243,2.358,290,5.194,302,2.247,304,1.264,307,1.756,315,1.234,325,0.9,346,1.722,387,1.415,392,2.56,401,1.195,402,2.27,403,1.919,404,1.919,408,1.415,409,2.697,414,2.072,415,1.361,418,2.103,419,1.535,420,1.845,426,2.57,427,1.756,430,1.311,432,1.361,435,1.415,436,2.196,441,2.849,442,1.946,443,1.946,451,2.702,458,2.702,459,1.845,461,2.062,463,1.845,520,3.041,548,2.831,592,1.756,610,1.756,620,2.831,623,2.831,705,3.347,771,2.831,877,3.748,900,2.358,1038,5.241,1039,2.062,1045,2.831,1055,2.062,1059,2.062,1061,2.831,1185,4.083,1393,2.196,1394,3.215,1453,2.56,1627,2.56,1629,2.831,1736,4.186,1770,3.452,1771,2.831,1772,2.831,1773,3.243,1774,3.243,1775,3.243,1776,3.243,1777,3.243,1778,2.831,1779,3.243,1780,3.243,1781,2.831,1782,2.831,1783,3.243,1784,3.243,1785,3.243,1786,3.243,1787,3.243,1788,2.831,1789,3.243,1790,3.243,1791,3.243,1792,3.243,1793,3.243,1794,3.243,1795,4.747,1796,3.243,1797,3.243,1798,3.243,1799,4.145,1800,3.243,1801,3.243,1802,3.243,1803,4.747,1804,3.243,1805,3.243,1806,3.243,1807,3.243,1808,3.243,1809,3.243,1810,3.243,1811,4.747,1812,3.243,1813,3.243,1814,3.243,1815,3.243]],["title/modules/UsersModule.html",[43,0.968,65,2.608]],["body/modules/UsersModule.html",[2,1.906,3,0.151,4,0.151,5,0.101,7,0.296,8,0.013,9,0.77,12,3.324,13,2.496,17,0.151,18,0.233,41,0.01,42,0.01,43,1.67,45,2.121,46,2.121,47,2.295,48,2.295,49,2.121,50,3.215,51,3.215,63,3.033,65,5.083,66,2.922,67,2.295,68,2.205,70,2.391,72,2.61,73,1.357,151,1.448,155,0.692,205,4.305,266,4.412,328,1.833,472,2.736,474,2.507,807,4.357,811,4.09,812,3.422,813,4.412,815,3.674,1770,5.147,1781,4.412,1816,4.412,1817,5.053,1818,4.412,1819,5.053,1820,5.053,1821,4.412]],["title/injectables/UsersService.html",[122,0.795,205,2.119]],["body/injectables/UsersService.html",[3,0.061,4,0.061,5,0.041,7,0.262,8,0.013,9,0.313,12,3.106,13,1.015,17,0.061,18,0.095,19,1.348,20,2.2,24,1.112,30,1.647,32,1.923,35,1.628,39,1.021,41,0.005,42,0.005,73,0.552,78,0.972,79,1.425,80,0.972,81,1.301,97,2.714,116,2.524,122,0.646,123,0.745,125,0.211,126,0.895,128,0.912,130,1.682,131,2.001,132,1.702,148,2.194,151,1.206,154,1.855,155,0.789,156,0.777,157,1.738,158,2.592,176,2.623,178,1.247,188,0.83,194,1.806,205,1.723,221,0.972,228,3.029,235,3.523,238,1.306,240,1.112,275,0.867,279,2.911,288,2.911,290,4.206,294,1.233,296,2.526,297,2.395,300,2.395,302,0.972,303,1.233,304,0.8,305,1.898,315,1.886,323,1.493,325,1.737,328,2.181,331,1.493,346,1.21,371,1.622,376,2.279,380,2.911,381,2.911,384,2.911,392,2.633,401,1.059,402,1.348,403,1.959,404,1.348,408,1.455,409,2.114,414,1.837,415,1.4,418,1.578,419,0.972,430,0.83,432,0.862,457,2.07,469,1.091,477,3.106,486,1.061,487,1.233,488,1.169,490,1.493,491,1.493,492,0.933,493,2.851,497,1.758,500,0.862,502,2.526,503,1.233,504,1.233,505,1.233,506,1.233,507,1.233,512,1.493,516,1.793,517,1.793,518,1.806,519,1.493,520,3.391,522,1.306,524,1.793,525,1.793,526,1.793,527,1.233,528,2.001,529,1.233,530,1.793,531,1.793,532,2.633,533,2.633,534,1.793,535,1.793,536,3.323,537,3.323,538,2.001,540,2.001,541,1.233,542,1.233,571,1.306,574,1.806,576,1.233,577,1.233,578,1.233,579,1.233,580,1.233,581,1.112,582,1.233,583,1.622,584,2.526,585,1.233,586,1.622,587,2.633,588,2.633,589,1.233,590,1.233,591,1.622,592,1.112,593,1.493,594,1.493,595,1.306,597,1.233,611,1.793,621,1.793,622,1.793,624,0.896,635,2.503,705,2.623,706,3.505,707,2.908,708,2.908,812,1.391,819,1.793,821,3.323,827,1.391,828,1.493,831,3.061,834,1.793,836,1.622,862,3.523,874,2.633,879,1.622,894,1.793,967,1.622,1003,2.12,1038,4.384,1082,2.911,1083,2.911,1123,1.793,1126,2.633,1150,3.281,1200,2.424,1307,2.258,1564,2.911,1616,1.793,1627,2.633,1638,1.793,1736,2.851,1772,2.911,1778,1.793,1782,1.793,1799,1.793,1821,1.793,1822,1.793,1823,4.209,1824,4.209,1825,4.209,1826,3.335,1827,3.335,1828,2.054,1829,2.054,1830,2.054,1831,2.054,1832,2.054,1833,2.054,1834,2.054,1835,6.012,1836,2.054,1837,2.054,1838,2.054,1839,2.054,1840,2.054,1841,2.054,1842,2.054,1843,2.054,1844,2.054,1845,2.054,1846,1.793,1847,2.054,1848,3.335,1849,2.054,1850,2.054,1851,3.335,1852,4.845,1853,2.054,1854,3.335,1855,2.054,1856,2.054,1857,2.054,1858,2.054,1859,4.209,1860,2.054,1861,2.054,1862,2.054,1863,2.054,1864,2.054,1865,2.054,1866,3.335,1867,2.054]],["title/coverage.html",[1868,4.896]],["body/coverage.html",[0,2.063,1,1.956,5,0.083,6,2.349,8,0.013,10,1.711,14,1.531,18,0.379,41,0.006,42,0.006,49,1.13,122,1.523,124,2.349,138,1.956,139,2.349,148,0.943,151,1.183,156,0.314,160,1.531,176,1.457,178,0.797,186,1.531,187,1.274,189,1.956,192,1.615,193,3.379,197,1.457,205,1.39,251,1.822,252,1.822,274,2.349,328,0.976,338,1.13,359,2.349,398,1.956,399,2.349,406,1.711,423,1.822,428,1.711,469,1.643,470,1.956,475,2.349,634,3.001,659,3.259,660,3.651,677,1.615,700,3.861,705,1.457,712,2.349,713,3.259,719,1.711,720,2.349,721,3.259,739,1.711,740,2.349,741,3.259,748,1.822,749,3.259,750,3.651,765,1.711,766,1.711,767,2.349,768,3.259,777,1.711,778,2.349,779,3.259,796,1.956,797,2.349,799,1.711,807,1.822,809,1.822,811,1.711,816,2.349,829,1.956,830,2.124,831,1.956,858,6.26,907,2.349,908,1.956,909,2.349,915,1.822,922,1.956,929,1.711,934,2.124,963,1.956,972,2.349,983,2.349,1007,2.624,1009,2.349,1010,1.274,1011,3.001,1032,1.822,1034,1.956,1035,2.349,1047,1.822,1050,1.711,1069,2.349,1090,2.124,1091,2.349,1092,3.259,1109,2.124,1110,2.124,1162,2.349,1188,2.349,1190,2.349,1198,1.956,1199,2.349,1206,1.711,1213,1.457,1232,1.822,1252,2.349,1290,2.349,1376,3.001,1389,1.956,1390,2.349,1400,1.822,1402,1.711,1418,2.349,1449,3.259,1455,1.956,1456,1.956,1471,1.615,1472,3.001,1498,1.956,1500,1.956,1501,2.349,1514,1.711,1543,2.349,1555,1.956,1571,3.001,1584,1.956,1585,2.349,1591,1.822,1608,2.349,1641,3.001,1653,1.956,1654,2.349,1666,1.822,1669,1.711,1672,2.124,1688,2.349,1719,2.349,1724,2.349,1726,2.349,1728,2.349,1730,2.349,1732,2.349,1734,2.349,1736,1.822,1737,2.349,1746,3.001,1770,1.956,1771,2.349,1822,2.349,1868,2.349,1869,2.691,1870,2.691,1871,2.691,1872,8.207,1873,6.073,1874,7.059,1875,5.021,1876,6.672,1877,6.409,1878,6.884,1879,5.021,1880,5.631,1881,7.804,1882,4.384,1883,5.825,1884,2.691,1885,2.349,1886,2.691,1887,2.691,1888,2.691,1889,2.691,1890,2.691,1891,2.691,1892,2.691]],["title/dependencies.html",[46,2.072,544,2.702]],["body/dependencies.html",[8,0.013,9,0.782,13,2.535,18,0.299,24,2.778,41,0.01,42,0.01,46,2.154,73,1.378,78,2.429,79,1.737,80,2.429,81,1.745,92,4.051,94,4.051,132,2.075,195,2.778,202,2.075,223,3.731,241,4.48,256,3.262,259,4.051,262,3.475,263,4.051,309,5.184,449,3.262,488,2.92,566,2.651,666,3.08,675,2.154,933,3.731,1128,3.731,1195,4.48,1209,3.731,1214,3.262,1215,4.48,1246,4.48,1723,2.778,1846,4.48,1893,5.131,1894,7.131,1895,5.131,1896,5.131,1897,5.131,1898,5.131,1899,5.131,1900,5.131,1901,5.131,1902,5.131,1903,5.131,1904,6.498,1905,5.131,1906,5.131,1907,5.131,1908,5.131,1909,5.131,1910,5.131,1911,5.131,1912,5.131,1913,6.498,1914,5.131,1915,5.131,1916,5.131,1917,5.131,1918,5.131,1919,5.131,1920,5.131,1921,5.131,1922,5.131,1923,5.131]],["title/miscellaneous/functions.html",[1924,2.175,1925,4.31]],["body/miscellaneous/functions.html",[8,0.011,41,0.011,42,0.011,49,3.326,125,0.674,1885,5.712,1924,4.159,1925,5.712,1926,6.542]],["title/index.html",[125,0.352,690,2.702,1927,3.422]],["body/index.html",[8,0.012,41,0.011,42,0.011,238,3.925,240,3.94,243,4.489,307,3.343,449,3.925,497,2.24,509,5.744,518,3.343,519,4.489,592,3.343,626,5.744,900,5.29,905,6.353,1336,6.353,1788,5.391,1928,6.174,1929,6.174,1930,7.276,1931,6.174,1932,6.174]],["title/modules.html",[45,2.354]],["body/modules.html",[8,0.01,41,0.01,42,0.01,44,4.135,45,2.388,55,3.852,56,3.852,57,3.852,58,3.852,59,3.852,60,3.852,61,3.852,62,3.852,63,3.414,64,3.852,65,3.616,1280,7.389,1933,8.463,1934,8.463,1935,8.463]],["title/overview.html",[1936,4.896]],["body/overview.html",[2,1.187,8,0.013,10,4.013,14,4.297,41,0.008,42,0.008,43,0.946,44,6.153,45,1.683,46,1.683,47,1.821,48,1.821,49,1.683,50,1.821,51,1.821,52,3.5,53,3.5,54,3.5,55,5.521,56,4.829,57,5.114,58,4.829,59,4.829,60,4.829,61,4.829,62,4.829,63,4.532,64,4.829,65,4.801,66,2.506,67,1.821,68,1.749,123,1.454,197,4.089,205,3.974,247,3.5,248,3.5,249,3.5,251,4.274,252,4.274,307,2.17,428,4.013,465,3.5,466,3.5,633,0.977,799,4.013,803,3.5,804,3.5,929,4.013,958,3.5,959,3.5,1008,3.165,1050,4.013,1063,3.5,1064,3.5,1206,4.013,1225,3.5,1226,3.5,1402,4.013,1413,3.5,1414,3.5,1514,4.013,1537,3.5,1538,3.5,1602,3.5,1603,3.5,1604,3.5,1669,4.013,1683,3.5,1684,3.5,1816,3.5,1818,3.5,1936,3.5,1937,5.519,1938,4.009,1939,4.009]],["title/properties.html",[275,1.283,544,2.702]],["body/properties.html",[8,0.012,41,0.011,42,0.011,238,4.055,239,5.57,275,1.658,370,5.57,636,2.897,1940,6.379,1941,6.379,1942,6.379,1943,6.379,1944,6.379,1945,6.379,1946,6.379,1947,6.379]],["title/miscellaneous/typealiases.html",[1924,2.175,1948,4.936]],["body/miscellaneous/typealiases.html",[8,0.011,41,0.011,42,0.011,125,0.619,156,0.702,485,5.655,634,4.372,655,4.721,826,5.208,827,4.851,828,5.208,1011,4.372,1030,4.851,1211,4.851,1376,4.372,1472,4.372,1491,5.655,1571,4.372,1641,4.372,1746,4.372,1924,3.823,1949,6.014,1950,5.25,1951,5.25,1952,5.25,1953,5.25,1954,5.25,1955,5.25,1956,5.25]],["title/miscellaneous/variables.html",[1924,2.175,1957,4.31]],["body/miscellaneous/variables.html",[5,0.028,7,0.052,8,0.013,32,0.378,35,0.366,36,0.882,39,0.642,41,0.004,42,0.004,43,1.793,79,2.081,109,0.823,125,0.145,151,1.66,155,0.817,156,0.55,158,0.64,165,1.646,170,1.924,181,2.754,186,1.383,187,1.15,195,0.763,221,0.667,222,0.494,233,0.954,296,4.054,297,3.844,304,0.549,307,0.763,315,1.984,325,2.272,328,1.384,331,3.423,333,2.224,338,1.807,339,6,346,1.708,377,0.511,387,3.317,400,3.758,401,1.185,418,1.394,426,2.549,447,1.112,469,1.409,470,1.767,500,3.191,551,1.112,599,0.696,606,0.615,608,1.024,630,4.115,631,4.115,634,1.024,638,4.115,658,1.23,742,4.832,743,5.147,807,1.646,809,1.646,811,1.545,829,1.767,830,1.919,831,1.767,858,5.526,860,3.717,877,3.398,910,1.112,920,1.112,941,1.23,993,1.23,1010,2.037,1011,1.024,1032,1.646,1033,1.23,1036,3.398,1100,1.024,1109,1.919,1110,1.919,1129,1.23,1140,1.23,1174,6,1232,1.646,1376,1.024,1388,1.23,1455,1.767,1459,1.112,1461,1.112,1471,2.583,1472,1.024,1496,1.23,1498,1.767,1499,1.23,1502,4.405,1571,1.024,1583,1.23,1641,1.024,1652,1.23,1672,1.919,1746,1.024,1766,1.23,1882,1.23,1883,1.23,1924,0.895,1950,1.23,1951,1.23,1952,1.23,1953,1.23,1954,1.23,1955,1.23,1956,1.23,1957,1.23,1958,3.206,1959,5.045,1960,1.409,1961,1.409,1962,4.708,1963,2.431,1964,7.633,1965,7.633,1966,8.18,1967,8.18,1968,1.409,1969,1.409,1970,7.6,1971,1.409,1972,2.431,1973,1.409,1974,3.206,1975,2.431,1976,1.409,1977,2.431,1978,1.409,1979,2.431,1980,1.409,1981,2.431,1982,2.431,1983,1.409,1984,3.206,1985,2.431,1986,1.409,1987,2.431,1988,1.409,1989,2.431,1990,1.409,1991,2.431,1992,1.409,1993,1.409,1994,2.431,1995,1.409,1996,2.431,1997,2.431,1998,1.409,1999,3.206,2000,2.431,2001,1.409,2002,2.431,2003,1.409,2004,2.431,2005,1.409,2006,2.431,2007,1.409,2008,2.431,2009,2.431,2010,1.409,2011,2.431,2012,1.409,2013,3.206,2014,2.431,2015,1.409,2016,2.431,2017,1.409,2018,2.431,2019,1.409,2020,1.409,2021,2.431,2022,1.409,2023,2.431,2024,2.431,2025,1.409,2026,2.431,2027,1.409,2028,3.206,2029,2.431,2030,1.409,2031,2.431,2032,1.409,2033,2.431,2034,1.409,2035,2.431,2036,2.431,2037,1.409,2038,2.431,2039,1.409,2040,3.206,2041,2.431,2042,1.409,2043,2.431,2044,1.409,2045,2.431,2046,1.409,2047,1.409,2048,1.409,2049,1.409,2050,1.409,2051,1.409,2052,1.409,2053,1.409,2054,1.409,2055,1.409,2056,1.409]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":858,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1941,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":497,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":529,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.3",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":1374,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["12",{"_index":1937,"title":{},"body":{"overview.html":{}}}],["123456",{"_index":711,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["15t06:47:49.369z",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1938,"title":{},"body":{"overview.html":{}}}],["1mb",{"_index":1375,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["2",{"_index":307,"title":{"classes/Company-2.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.1.3",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":600,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["2023",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":885,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["3",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{}}}],["3.0.1",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1939,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":601,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["403",{"_index":1157,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["5.4.0",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["60s",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1204,"title":{},"body":{"controllers/MailController.html":{}}}],["7.0.4",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["7h:0m:0s",{"_index":1222,"title":{},"body":{"controllers/MailController.html":{}}}],["9.0.3",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1242,"title":{},"body":{"modules/MailModule.html":{}}}],["__v",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["abc",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["access",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["access_token",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":876,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["action",{"_index":979,"title":{},"body":{"injectables/FilesService.html":{}}}],["actual",{"_index":1469,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ad@gmail.com",{"_index":710,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["adapter",{"_index":1244,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":1123,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["address",{"_index":635,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"modules/MailModule.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":980,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":870,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["admin=${admin_role",{"_index":1639,"title":{},"body":{"injectables/RolesService.html":{}}}],["admin=${adminemail",{"_index":1865,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":882,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["admin_email",{"_index":1861,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin_role",{"_index":829,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminemail",{"_index":1864,"title":{},"body":{"injectables/UsersService.html":{}}}],["adminrole",{"_index":878,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":888,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":707,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["aliases",{"_index":1949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedfiletypes",{"_index":1357,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["allowedfiletypes.includes(fileextension",{"_index":1368,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["already",{"_index":895,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["ang",{"_index":901,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["api",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":742,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apipath=${apipath",{"_index":1428,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["apiproperty",{"_index":703,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":433,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('databases",{"_index":801,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["apitags('file",{"_index":939,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":1053,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1217,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1405,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1517,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1595,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1673,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1783,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1285,"title":{},"body":{"injectables/MailService.html":{}}}],["app.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module",{"_index":969,"title":{},"body":{"modules/FilesModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":44,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":763,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":487,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":505,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(rq",{"_index":573,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["aqp(sq",{"_index":568,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["argumentshost",{"_index":988,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":682,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["array'})@isstring({each",{"_index":736,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["arrow",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":1092,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":1098,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:23",{"_index":1101,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:38",{"_index":1104,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":138,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1125,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard",{"_index":1108,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1094,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1189,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":55,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1945,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":14,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1180,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["avoid",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":545,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/UpdateUserDto.html":{}}}],["badrequestexception",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`không",{"_index":1638,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`not",{"_index":596,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(`role",{"_index":1617,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(`subscriber",{"_index":1710,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["basename",{"_index":1352,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1846,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":1142,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["biến",{"_index":571,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Resume.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["biết",{"_index":902,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["biểu",{"_index":521,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["body",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('email",{"_index":1794,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('status",{"_index":1534,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":648,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":841,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1321,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1935,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1933,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":543,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/FilesController.html":{}}}],["built",{"_index":1119,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bulk",{"_index":849,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["báo",{"_index":570,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["bên",{"_index":565,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["bênh",{"_index":546,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["bước",{"_index":1928,"title":{},"body":{"index.html":{}}}],["bạn",{"_index":1158,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bản",{"_index":587,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["bảng",{"_index":515,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["bảo",{"_index":556,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["bằng",{"_index":452,"title":{},"body":{"controllers/CompaniesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["c",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["ca",{"_index":865,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["callhandler",{"_index":1451,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":1095,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1099,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["cast",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["catch",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":985,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":992,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cb",{"_index":1340,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(new",{"_index":1369,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1343,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cc",{"_index":770,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["ch",{"_index":618,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{}}}],["chayk",{"_index":1460,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["check",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["chi",{"_index":867,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["chia",{"_index":534,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["chiếu",{"_index":1115,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["chua",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["chuyển",{"_index":1814,"title":{},"body":{"controllers/UsersController.html":{}}}],["chính",{"_index":439,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/DatabasesService.html":{}}}],["chúng",{"_index":1334,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["chưa",{"_index":1700,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["chạy",{"_index":900,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["chắc",{"_index":554,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["class",{"_index":18,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":633,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["clear",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["client",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":465,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":466,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":803,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":804,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":958,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":959,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":1063,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":1064,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1225,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1226,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1413,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1414,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1537,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1538,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1602,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1603,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1604,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1683,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1684,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1816,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1818,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1817,"title":{},"body":{"modules/UsersModule.html":{}}}],["co",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["code",{"_index":447,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"miscellaneous/variables.html":{}}}],["companies",{"_index":400,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":468,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":429,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":398,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":56,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":428,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":469,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":431,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":713,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":716,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":717,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":718,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":1721,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":715,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":473,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":485,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":751,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":479,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":470,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1845,"title":{},"body":{"injectables/UsersService.html":{}}}],["config",{"_index":967,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{}}}],["configmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get('email_auth_pass",{"_index":1238,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1237,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1235,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1250,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_db_url",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1286,"title":{},"body":{"injectables/MailService.html":{}}}],["connect",{"_index":490,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["connection",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1330,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{}}}],["console.log('directory",{"_index":1311,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(createcompanydto",{"_index":437,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["console.log(file",{"_index":952,"title":{},"body":{"controllers/FilesController.html":{}}}],["const",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1191,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":476,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":1164,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":1070,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(mailerservice",{"_index":1254,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(permissionmodel",{"_index":1419,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":435,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":1097,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1545,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1609,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1690,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":819,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1325,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["content",{"_index":1287,"title":{},"body":{"injectables/MailService.html":{}}}],["context",{"_index":1102,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":1132,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1131,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":1139,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1465,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":434,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":802,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":940,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":1054,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1218,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1406,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1518,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1596,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1674,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1784,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":455,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["cookie",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["cookies",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["copying",{"_index":495,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["count",{"_index":530,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["countpermission",{"_index":845,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":847,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":843,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coust",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1868,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":401,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":436,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":405,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":973,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":1037,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1391,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1586,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1656,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1504,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(userdto",{"_index":1772,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":406,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1313,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":500,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":719,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":677,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1292,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":739,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":748,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":766,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":777,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createsubscriberdto.name",{"_index":1702,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createusercvdto",{"_index":765,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":705,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":1215,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cron('0",{"_index":1220,"title":{},"body":{"controllers/MailController.html":{}}}],["cron('10",{"_index":1223,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":1216,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":993,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":996,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":995,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cung",{"_index":854,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["current",{"_index":582,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":414,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["custom",{"_index":1124,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["customize",{"_index":1006,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{}}}],["cv",{"_index":1524,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["cài",{"_index":1929,"title":{},"body":{"index.html":{}}}],["các",{"_index":1788,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["cách",{"_index":551,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"miscellaneous/variables.html":{}}}],["cái",{"_index":1813,"title":{},"body":{"controllers/UsersController.html":{}}}],["câu",{"_index":626,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"index.html":{}}}],["còn",{"_index":1630,"title":{},"body":{"injectables/RolesService.html":{}}}],["cạch",{"_index":572,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["cấu",{"_index":1331,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cần",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["cập",{"_index":1160,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["của",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["d",{"_index":509,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/MailService.html":{},"index.html":{}}}],["data",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.result",{"_index":1467,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["database",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompaniesService.html":{}}}],["databases",{"_index":798,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":806,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":800,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":796,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":57,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":799,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":632,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":1002,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date(value",{"_index":691,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":1355,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["de",{"_index":1494,"title":{},"body":{"classes/Resume.html":{}}}],["declarations",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["decoded",{"_index":1182,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["decorator",{"_index":453,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["decorators",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":528,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":420,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":1045,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('remove",{"_index":1398,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["deletedat",{"_index":631,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":624,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1329,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":46,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":636,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["destination",{"_index":1337,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["destructuring",{"_index":567,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["detetedby",{"_index":621,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["dev",{"_index":1932,"title":{},"body":{"index.html":{}}}],["dinh",{"_index":1492,"title":{},"body":{"classes/Resume.html":{}}}],["dir",{"_index":1240,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1320,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1302,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["doc",{"_index":1363,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["document",{"_index":498,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{}}}],["documentation",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["documents",{"_index":531,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["documnet",{"_index":866,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["docx",{"_index":1364,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["done",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto",{"_index":1789,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/create",{"_index":430,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":432,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{}}}],["duoc",{"_index":1562,"title":{},"body":{"injectables/ResumesService.html":{}}}],["dv",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["dân",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["dùng",{"_index":560,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["dưới",{"_index":1810,"title":{},"body":{"controllers/UsersController.html":{}}}],["dạng",{"_index":681,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/MailService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dạng'})@isnotempty({message",{"_index":755,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dụng",{"_index":874,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["dựa",{"_index":1792,"title":{},"body":{"controllers/UsersController.html":{}}}],["each",{"_index":683,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{}}}],["eexist",{"_index":1317,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1246,"title":{},"body":{"modules/MailModule.html":{},"dependencies.html":{}}}],["email",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('0",{"_index":1203,"title":{},"body":{"controllers/MailController.html":{}}}],["empty",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["encode",{"_index":1170,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["enddate",{"_index":692,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["ended",{"_index":694,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["endpoint",{"_index":1161,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1322,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1293,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1296,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enter",{"_index":1812,"title":{},"body":{"controllers/UsersController.html":{}}}],["env",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["envfilepath",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["eq",{"_index":523,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["err",{"_index":1105,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{}}}],["error('element",{"_index":616,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["error.code",{"_index":1316,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["everywhere",{"_index":561,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["example",{"_index":709,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":990,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":935,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception.filter.ts",{"_index":983,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":989,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":997,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":984,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":1860,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":580,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":1100,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":842,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["existing",{"_index":1855,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":1314,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["expiresin",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["express.multer.file",{"_index":918,"title":{},"body":{"controllers/FilesController.html":{}}}],["expression",{"_index":517,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["expressjs",{"_index":446,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["extend",{"_index":1118,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["extends",{"_index":1093,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1347,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1348,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1168,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1172,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":1174,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["female",{"_index":893,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["fetch",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":868,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined)@usefilters(new",{"_index":921,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":931,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":721,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":951,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.originalname.split('.').pop().tolowercase",{"_index":1366,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fileextension",{"_index":1365,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filefilter",{"_index":1356,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fileinterceptor",{"_index":932,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":924,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":910,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":961,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":930,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":908,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1373,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filesmodule",{"_index":58,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":929,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filter",{"_index":502,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":506,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":507,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1354,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":612,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"injectables/ResumesService.html":{}}}],["find(filter",{"_index":576,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":402,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":408,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyuser",{"_index":1503,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findbyuser(@user",{"_index":1530,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findbyuser(user",{"_index":1507,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findbyusers",{"_index":1544,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1550,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":403,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":459,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(_id",{"_index":1694,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["findone(id",{"_index":415,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1826,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1832,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1823,"title":{},"body":{"injectables/UsersService.html":{}}}],["fix",{"_index":552,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/FilesController.html":{}}}],["folder",{"_index":1305,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["following",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["forbiddenexception",{"_index":1106,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":597,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1635,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1637,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1799,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1863,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":1136,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["frontend",{"_index":627,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["fs",{"_index":1301,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1309,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":871,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["functions",{"_index":1925,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gan",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["gender",{"_index":708,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1843,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1849,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/account')@responsemessage('get",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/getall",{"_index":1807,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/refresh",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":458,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public",{"_index":416,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@public()@responsemessage('fetch",{"_index":1043,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1396,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get('abc",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["get('by",{"_index":1527,"title":{},"body":{"controllers/ResumesController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":410,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["get()@public()@responsemessage('send",{"_index":1202,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1393,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1824,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["gethello1",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["getrootpath",{"_index":1291,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1689,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1696,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1927,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1655,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(@user",{"_index":1677,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1660,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":588,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["gi",{"_index":771,"title":{},"body":{"classes/CreateRoleDto.html":{},"controllers/UsersController.html":{}}}],["gif",{"_index":1361,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["giúp",{"_index":897,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["giống",{"_index":1626,"title":{},"body":{"injectables/RolesService.html":{}}}],["globally",{"_index":968,"title":{},"body":{"modules/FilesModule.html":{}}}],["guard",{"_index":1111,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["gán",{"_index":1184,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gọi",{"_index":1181,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gốc",{"_index":904,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["gửi",{"_index":1272,"title":{},"body":{"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["h",{"_index":450,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{}}}],["handle",{"_index":1463,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlebars",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1230,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlehomepage",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["handlelogin",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(user",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":1096,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1103,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlesendmail",{"_index":1201,"title":{},"body":{"controllers/MailController.html":{}}}],["handling",{"_index":1138,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":1835,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1852,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1844,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(plainpassword",{"_index":1850,"title":{},"body":{"injectables/UsersService.html":{}}}],["hay",{"_index":970,"title":{},"body":{"modules/FilesModule.html":{},"modules/MailModule.html":{}}}],["hbs",{"_index":1245,"title":{},"body":{"modules/MailModule.html":{}}}],["header",{"_index":1143,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["hello",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1127,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hierarchy",{"_index":1324,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hieu",{"_index":1495,"title":{},"body":{"classes/Resume.html":{}}}],["history",{"_index":1473,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["hiện",{"_index":583,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["hoidanit@gmail.com",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hop",{"_index":603,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["host",{"_index":987,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["host.switchtohttp",{"_index":994,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hoặc",{"_index":698,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["html",{"_index":689,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{}}}],["httpexception",{"_index":986,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["httpexception('invalid",{"_index":1370,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["httpexceptionfilter",{"_index":922,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":927,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1371,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hydrateddocument",{"_index":655,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hàm",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["hình",{"_index":1332,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hạn",{"_index":617,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["hỏi",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["hợp",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["i'm",{"_index":881,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":418,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id'})@isarray({message",{"_index":775,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["id=${_id",{"_index":1440,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["id=${id",{"_index":598,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["identifier",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":558,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["ignoreexpiration",{"_index":1173,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1346,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1350,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":833,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":125,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["infor",{"_index":440,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["information",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":896,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":830,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":1177,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["initialized",{"_index":838,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["inject",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":122,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":486,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":489,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":1079,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["injectmodel(permission.name",{"_index":835,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1556,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":836,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1258,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":834,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["insert",{"_index":496,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/SubscribersService.html":{}}}],["intercept",{"_index":1457,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1717,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":942,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptors.decorator",{"_index":938,"title":{},"body":{"controllers/FilesController.html":{}}}],["interface",{"_index":1007,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":1008,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":1109,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":1110,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":695,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":667,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isboolean",{"_index":668,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":669,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdate({message",{"_index":726,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":630,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":670,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":1150,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":839,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":704,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":661,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":714,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":671,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":722,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":672,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":1129,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicperminssion",{"_index":1140,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":673,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1767,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidfiletype",{"_index":1367,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["isvalidpassword",{"_index":1827,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1834,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1319,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["it@gmail.com",{"_index":890,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["item.company.name",{"_index":1275,"title":{},"body":{"injectables/MailService.html":{}}}],["item.name",{"_index":1274,"title":{},"body":{"injectables/MailService.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1276,"title":{},"body":{"injectables/MailService.html":{}}}],["item.skills",{"_index":1277,"title":{},"body":{"injectables/MailService.html":{}}}],["iuser",{"_index":148,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":532,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["iểm",{"_index":899,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["job",{"_index":1010,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":1052,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":660,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:18",{"_index":662,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:21",{"_index":664,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:24",{"_index":663,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:30",{"_index":732,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:35",{"_index":737,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:41",{"_index":723,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:44",{"_index":731,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:47",{"_index":734,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:50",{"_index":733,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:53",{"_index":730,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:56",{"_index":724,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:61",{"_index":738,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:66",{"_index":727,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:70",{"_index":729,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":1068,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":1030,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":752,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":1072,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["jobs",{"_index":1036,"title":{},"body":{"controllers/JobsController.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":1066,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":1051,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":1032,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":1034,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":59,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":1050,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1267,"title":{},"body":{"injectables/MailService.html":{}}}],["jobwithmatchingskills.map((item",{"_index":1273,"title":{},"body":{"injectables/MailService.html":{}}}],["jobwithmatchingskills?.length",{"_index":1269,"title":{},"body":{"injectables/MailService.html":{}}}],["join",{"_index":514,"title":{},"body":{"injectables/CompaniesService.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1241,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1344,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpeg",{"_index":1359,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg",{"_index":1358,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["js",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/UsersController.html":{}}}],["json",{"_index":999,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{}}}],["jwt",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":1090,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1171,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":251,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":1742,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["key",{"_index":948,"title":{},"body":{"controllers/FilesController.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["kh",{"_index":628,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["khai",{"_index":569,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["khi",{"_index":1271,"title":{},"body":{"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["khong",{"_index":1525,"title":{},"body":{"controllers/ResumesController.html":{}}}],["khác",{"_index":1627,"title":{},"body":{"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["không",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["kiểu",{"_index":563,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["kiện",{"_index":533,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["ko",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{}}}],["kết",{"_index":593,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["l",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{}}}],["la",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["large",{"_index":1005,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["lay",{"_index":863,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["le",{"_index":604,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["legend",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":688,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1943,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":578,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["limits",{"_index":1372,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["link",{"_index":1304,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["lish",{"_index":1521,"title":{},"body":{"controllers/ResumesController.html":{}}}],["list",{"_index":411,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["literal",{"_index":642,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liệu",{"_index":1270,"title":{},"body":{"injectables/MailService.html":{}}}],["local",{"_index":1195,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":189,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":252,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":685,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["log",{"_index":906,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger",{"_index":817,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":825,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logic",{"_index":1126,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["login",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["login(user",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":637,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(user",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["luc",{"_index":855,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["luôn",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["làm",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["lòng",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["lưu",{"_index":619,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/MulterConfigService.html":{}}}],["lượng",{"_index":586,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["lại",{"_index":1631,"title":{},"body":{"injectables/RolesService.html":{}}}],["lấy",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lần",{"_index":1461,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lệnh",{"_index":905,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["lỗi",{"_index":547,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["mail",{"_index":1200,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["mail.controller",{"_index":1228,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1207,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1198,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1229,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1233,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1208,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{}}}],["mailmodule",{"_index":60,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1206,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":971,"title":{},"body":{"modules/FilesModule.html":{}}}],["male",{"_index":886,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1453,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["map((data",{"_index":1464,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map(data",{"_index":1462,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":541,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["max",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["maxage",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["mean",{"_index":494,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["message",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["message1",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["meta",{"_index":581,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1128,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["metadate",{"_index":1116,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["method",{"_index":743,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["method=${method",{"_index":1429,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["methods",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["milisecond",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["minh",{"_index":1496,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1924,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":43,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/FilesModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":45,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1209,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1231,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":492,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["mongodb",{"_index":524,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["mongoose",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1497,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":657,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(_id",{"_index":1088,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":595,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["mongoosemodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":472,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1303,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":964,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":963,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":962,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":965,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1295,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1300,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mvc",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["mình",{"_index":553,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["mạnh",{"_index":1791,"title":{},"body":{"controllers/UsersController.html":{}}}],["mất",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mẫu",{"_index":549,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["n",{"_index":1336,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["name",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["name=${createsubscriberdto.name",{"_index":1703,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["name=${name",{"_index":1618,"title":{},"body":{"injectables/RolesService.html":{}}}],["ne",{"_index":1526,"title":{},"body":{"controllers/ResumesController.html":{}}}],["nem",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["nest.js",{"_index":1808,"title":{},"body":{"controllers/UsersController.html":{}}}],["nestinterceptor",{"_index":1450,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":449,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators/core/use",{"_index":937,"title":{},"body":{"controllers/FilesController.html":{}}}],["nestjs/config",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1723,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":933,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["neu",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["new",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newcv",{"_index":1557,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?._id",{"_index":1559,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?.createdat",{"_index":1560,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":1080,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1430,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?._id",{"_index":1432,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?.createdat",{"_index":1433,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newrole",{"_index":1619,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?._id",{"_index":1621,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?.createdat",{"_index":1622,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubscriber",{"_index":1704,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber?._id",{"_index":1706,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber?.createdat",{"_index":1707,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":1786,"title":{},"body":{"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":1787,"title":{},"body":{"controllers/UsersController.html":{}}}],["next",{"_index":1458,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":555,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nghia",{"_index":1493,"title":{},"body":{"classes/Resume.html":{}}}],["nghĩa",{"_index":1459,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nguồn",{"_index":903,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nh",{"_index":680,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{}}}],["nhat",{"_index":1563,"title":{},"body":{"injectables/ResumesService.html":{}}}],["nhieu",{"_index":851,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nhưng",{"_index":1628,"title":{},"body":{"injectables/RolesService.html":{}}}],["nice",{"_index":1284,"title":{},"body":{"injectables/MailService.html":{}}}],["nnbxxx",{"_index":1946,"title":{},"body":{"properties.html":{}}}],["nodemailer",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":891,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":1806,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":1930,"title":{},"body":{"index.html":{}}}],["null",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":457,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["nào",{"_index":1811,"title":{},"body":{"controllers/UsersController.html":{}}}],["này",{"_index":608,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["nên",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{}}}],["nơi",{"_index":1333,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["nằm",{"_index":609,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["nếu",{"_index":1133,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"injectables/SubscribersService.html":{}}}],["nữa",{"_index":557,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["object",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["objectid",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["objuser",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1452,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":527,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["omittype",{"_index":1740,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1738,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":818,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["operator",{"_index":525,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["optional",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1247,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overide",{"_index":1122,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{}}}],["overload",{"_index":1797,"title":{},"body":{"controllers/UsersController.html":{}}}],["override",{"_index":1120,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{}}}],["overview",{"_index":1936,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":562,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["package",{"_index":544,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/CompaniesService.html":{}}}],["page",{"_index":510,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["pages",{"_index":589,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":585,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination",{"_index":1041,"title":{},"body":{"controllers/JobsController.html":{}}}],["pagnigate",{"_index":1394,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["panigation",{"_index":412,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["param",{"_index":427,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":461,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["parameter",{"_index":1183,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["parameters",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":488,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1323,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":926,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1722,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createcompanydto",{"_index":1720,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1725,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1727,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1729,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1731,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1733,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1735,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createuserdto",{"_index":1741,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["passport/local.strategy",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1169,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1163,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":706,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":426,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":424,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":1048,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1779,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1667,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1003,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1353,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1349,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["pattern/i",{"_index":526,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["payload",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{}}}],["pdf",{"_index":1362,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["pending",{"_index":761,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["permission",{"_index":338,"title":{"classes/Permission.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":1153,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1404,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":741,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":745,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":746,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":747,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":744,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":1152,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":814,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":826,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":820,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1416,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":1151,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1403,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":809,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1389,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":61,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1402,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phan",{"_index":852,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["phía",{"_index":564,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["phải",{"_index":511,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{}}}],["phản",{"_index":1114,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["phần",{"_index":591,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["pipe",{"_index":943,"title":{},"body":{"controllers/FilesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["plainpassword",{"_index":1847,"title":{},"body":{"injectables/UsersService.html":{}}}],["plugin",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["png",{"_index":1360,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["populate",{"_index":1564,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":579,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":504,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["post",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout')@responsemessage('logout",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1508,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('upload",{"_index":945,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":1039,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["post()@skipcheckpermission()@responsemessage('get",{"_index":1661,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["prefix",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prevent",{"_index":1633,"title":{},"body":{"injectables/RolesService.html":{}}}],["preview",{"_index":1249,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1306,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":513,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["promise",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":639,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["prop({required",{"_index":1754,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":643,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":275,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pubic",{"_index":1154,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["public",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/refresh')@responsemessage('get",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":1775,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@post('/register')@responsemessage('register",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":919,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@apibody({type",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1345,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1569,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":409,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":594,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":687,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":442,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":443,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":872,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["ra",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["rai",{"_index":1523,"title":{},"body":{"controllers/ResumesController.html":{}}}],["raw",{"_index":456,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["readonly",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":1288,"title":{},"body":{"injectables/MailService.html":{}}}],["recursive",{"_index":1310,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1475,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(userdto",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":176,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["regular",{"_index":516,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["rejectedd",{"_index":764,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["remove",{"_index":404,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":463,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(_id",{"_index":1076,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["remove(id",{"_index":419,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":982,"title":{},"body":{"injectables/FilesService.html":{}}}],["removing",{"_index":1634,"title":{},"body":{"injectables/RolesService.html":{}}}],["render",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["render('home",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["replace",{"_index":1470,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["req",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["req.body",{"_index":1793,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.body.email",{"_index":1796,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.param.id",{"_index":1801,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.query",{"_index":454,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["req.query.page",{"_index":445,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["req.user",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["req?.headers?.folder_type",{"_index":1341,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":1145,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":1147,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.url",{"_index":1004,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1318,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1764,"title":{},"body":{"classes/User.html":{}}}],["requires",{"_index":1176,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["res",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":160,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response_message_key",{"_index":1455,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"get",{"_index":1676,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('create",{"_index":1055,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":1061,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":441,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('remove",{"_index":1411,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('send",{"_index":1219,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":1059,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":946,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["restful",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["result",{"_index":574,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1471,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1516,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":750,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:11",{"_index":760,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:14",{"_index":759,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:17",{"_index":758,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:20",{"_index":754,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:23",{"_index":757,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:29",{"_index":787,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:33",{"_index":785,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:37",{"_index":786,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:8",{"_index":756,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1542,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1491,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1547,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1502,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1540,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1515,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1498,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1500,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":62,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1514,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reviewing",{"_index":762,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["role",{"_index":328,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1594,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":768,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:12",{"_index":773,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:15",{"_index":769,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:19",{"_index":772,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:24",{"_index":776,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":815,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":827,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":821,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":860,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1606,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1593,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":811,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1584,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesmodule",{"_index":63,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":197,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":1243,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["route",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["run",{"_index":1931,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1214,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1454,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rỗng",{"_index":1149,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["s",{"_index":520,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":686,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{}}}],["salt",{"_index":1848,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1326,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":832,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sang",{"_index":1815,"title":{},"body":{"controllers/UsersController.html":{}}}],["sau",{"_index":696,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{}}}],["schedule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":474,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":654,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":658,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":1033,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1388,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1499,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1583,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1652,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1766,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":471,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schemas",{"_index":1067,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1417,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schemas",{"_index":1541,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schemas",{"_index":1607,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1687,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1821,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["second",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1175,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1236,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":862,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1436,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["send",{"_index":1262,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail",{"_index":1253,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["service",{"_index":699,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["set",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_public_key",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message_key",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shema",{"_index":491,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["signature",{"_index":1179,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["signoptions",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":920,"title":{},"body":{"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":684,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["skills",{"_index":679,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skip",{"_index":1156,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["skip(offset",{"_index":577,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1672,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdelete",{"_index":611,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["softdeletemodel",{"_index":477,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":503,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":542,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1950,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schemas.ts",{"_index":1951,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1952,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schemas.ts",{"_index":1953,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schemas.ts",{"_index":1954,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1955,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1956,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:70",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:142",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:152",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:76",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/passport/jwt",{"_index":1091,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1162,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:26",{"_index":1167,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1165,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local",{"_index":1188,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1190,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":1194,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":1192,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":399,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:23",{"_index":407,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:33",{"_index":413,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:48",{"_index":417,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:53",{"_index":425,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:62",{"_index":421,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":467,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":475,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:103",{"_index":483,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:13",{"_index":478,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:19",{"_index":480,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:30",{"_index":481,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:80",{"_index":482,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:88",{"_index":484,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":712,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1719,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1490,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":634,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":640,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":647,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":650,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":644,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":653,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":646,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":641,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":652,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":649,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":645,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":651,"title":{},"body":{"classes/Company.html":{}}}],["src/core/http",{"_index":934,"title":{},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1449,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:21",{"_index":1716,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:25",{"_index":1718,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":797,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":805,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":816,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:16",{"_index":823,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:32",{"_index":824,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1616,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":720,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1724,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":907,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":909,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:39",{"_index":923,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:47",{"_index":912,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:52",{"_index":913,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:57",{"_index":916,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:62",{"_index":914,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":960,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":972,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":975,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":976,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":978,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":977,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":974,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1290,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:12",{"_index":1299,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:17",{"_index":1297,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:45",{"_index":1294,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/jobs/dto/create",{"_index":659,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1726,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":1035,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:24",{"_index":1040,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:31",{"_index":1042,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:42",{"_index":1044,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:48",{"_index":1049,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:58",{"_index":1046,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":1065,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":1069,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:13",{"_index":1071,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:19",{"_index":1073,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:30",{"_index":1074,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:60",{"_index":1075,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:68",{"_index":1078,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:81",{"_index":1077,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schemas",{"_index":1210,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{},"modules/SubscribersModule.html":{}}}],["src/jobs/schemas/job.schemas.ts",{"_index":1011,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schemas.ts:12",{"_index":1026,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:15",{"_index":1012,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:22",{"_index":1022,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:25",{"_index":1025,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:28",{"_index":1024,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:31",{"_index":1021,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:34",{"_index":1017,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:37",{"_index":1027,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:40",{"_index":1018,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:43",{"_index":1019,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:46",{"_index":1014,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:52",{"_index":1029,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:58",{"_index":1016,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:64",{"_index":1013,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:67",{"_index":1028,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:70",{"_index":1020,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:73",{"_index":1015,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:9",{"_index":1023,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":1199,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:21",{"_index":1205,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1227,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1252,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:10",{"_index":1256,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:21",{"_index":1257,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1885,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":740,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1728,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1390,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:24",{"_index":1392,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:33",{"_index":1395,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:43",{"_index":1397,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:49",{"_index":1401,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:59",{"_index":1399,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1415,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1418,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:105",{"_index":1424,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1420,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:18",{"_index":1421,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:40",{"_index":1422,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:71",{"_index":1423,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:83",{"_index":1426,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":810,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1376,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1377,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1383,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1384,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1379,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1387,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1381,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:39",{"_index":1378,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:42",{"_index":1386,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1382,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":1380,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1385,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":749,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1730,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1501,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:23",{"_index":1505,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:31",{"_index":1510,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:37",{"_index":1506,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:47",{"_index":1511,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:53",{"_index":1513,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:63",{"_index":1512,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1539,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1543,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1546,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:123",{"_index":1553,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1548,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:45",{"_index":1551,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:55",{"_index":1549,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:86",{"_index":1552,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:94",{"_index":1554,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schemas.ts",{"_index":1472,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schemas.ts:11",{"_index":1481,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:14",{"_index":1489,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:17",{"_index":1488,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:20",{"_index":1485,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:26",{"_index":1476,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:29",{"_index":1484,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:34",{"_index":1482,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:44",{"_index":1478,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:50",{"_index":1487,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:56",{"_index":1480,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:62",{"_index":1477,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:65",{"_index":1486,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:68",{"_index":1483,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schemas.ts:71",{"_index":1479,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":767,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1732,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1585,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:24",{"_index":1587,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:30",{"_index":1588,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:40",{"_index":1589,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:46",{"_index":1592,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:56",{"_index":1590,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1605,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1608,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1610,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":1611,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:39",{"_index":1612,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:70",{"_index":1613,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:80",{"_index":1615,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:97",{"_index":1614,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schemas",{"_index":812,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schemas.ts",{"_index":1571,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schemas.ts:10",{"_index":1579,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:13",{"_index":1576,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:16",{"_index":1577,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:19",{"_index":1580,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:22",{"_index":1573,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:28",{"_index":1582,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:34",{"_index":1575,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:40",{"_index":1572,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:43",{"_index":1581,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:46",{"_index":1578,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:49",{"_index":1574,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":778,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1734,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":1212,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1641,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:10",{"_index":1646,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:13",{"_index":1648,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:16",{"_index":1649,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:19",{"_index":1643,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:25",{"_index":1651,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:31",{"_index":1645,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:37",{"_index":1642,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:40",{"_index":1650,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:43",{"_index":1647,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:46",{"_index":1644,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1654,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:28",{"_index":1657,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:38",{"_index":1663,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:44",{"_index":1658,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:54",{"_index":1659,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:61",{"_index":1668,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:70",{"_index":1664,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1685,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1688,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:106",{"_index":1697,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1691,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:18",{"_index":1692,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:40",{"_index":1693,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:71",{"_index":1695,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:80",{"_index":1699,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:91",{"_index":1698,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1737,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":808,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1746,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1758,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1755,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1759,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1748,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1756,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1747,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1749,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1761,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1760,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1751,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1763,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":1753,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":1750,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1762,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1757,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:67",{"_index":1752,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1771,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:25",{"_index":1773,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":1774,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":1776,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":1780,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":1777,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":1009,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1819,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1822,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:135",{"_index":1831,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:150",{"_index":1833,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:156",{"_index":1836,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:160",{"_index":1839,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1828,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:175",{"_index":1838,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:202",{"_index":1842,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:206",{"_index":1840,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":1841,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:34",{"_index":1829,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:68",{"_index":1837,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:99",{"_index":1830,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":693,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":690,"title":{"index.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["statements",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":599,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"miscellaneous/variables.html":{}}}],["status(status",{"_index":998,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":1000,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["sting",{"_index":1795,"title":{},"body":{"controllers/UsersController.html":{}}}],["storage",{"_index":1339,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":1113,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1248,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["su",{"_index":1522,"title":{},"body":{"controllers/ResumesController.html":{}}}],["sub",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["subcribers",{"_index":1259,"title":{},"body":{"injectables/MailService.html":{}}}],["subcribers's",{"_index":1264,"title":{},"body":{"injectables/MailService.html":{}}}],["subject",{"_index":1282,"title":{},"body":{"injectables/MailService.html":{}}}],["subs",{"_index":1263,"title":{},"body":{"injectables/MailService.html":{}}}],["subs.name",{"_index":1289,"title":{},"body":{"injectables/MailService.html":{}}}],["subs.skills",{"_index":1266,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber",{"_index":1213,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber's",{"_index":1662,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1671,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":779,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:14",{"_index":783,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:6",{"_index":781,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":782,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1251,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1211,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1255,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1260,"title":{},"body":{"injectables/MailService.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1686,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1670,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1232,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1653,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":64,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1669,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1265,"title":{},"body":{"injectables/MailService.html":{}}}],["successfully",{"_index":1312,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sun",{"_index":1221,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":1117,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":1137,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1280,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["supposed",{"_index":1468,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["svg",{"_index":1934,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1315,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sức",{"_index":1790,"title":{},"body":{"controllers/UsersController.html":{}}}],["t",{"_index":592,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["ta",{"_index":1112,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["tai",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["tao",{"_index":850,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ResumesService.html":{}}}],["targetdirectory",{"_index":1298,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":1146,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":1155,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":1144,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tat",{"_index":864,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["team",{"_index":1281,"title":{},"body":{"injectables/MailService.html":{}}}],["technician",{"_index":889,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["temp",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1239,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":614,"title":{},"body":{"injectables/CompaniesService.html":{},"modules/MailModule.html":{}}}],["th",{"_index":518,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["tham",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["thay",{"_index":856,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["theo",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["this.appservice.gethello",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(user",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1196,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":438,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":444,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":460,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":464,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":462,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":575,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":499,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":539,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":602,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":625,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":605,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('init_password",{"_index":884,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('port",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('should_init",{"_index":840,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1342,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":953,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":954,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":957,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":956,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.find",{"_index":615,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.gethashpassword(password",{"_index":1856,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gethashpassword(userdto.password",{"_index":1853,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jobmodel",{"_index":1085,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":1081,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1268,"title":{},"body":{"injectables/MailService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":1084,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":1086,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":1089,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":1087,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":1056,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":1057,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":1058,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":1062,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":1060,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":837,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1278,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendmail",{"_index":1224,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1435,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.count",{"_index":846,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1431,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1434,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":861,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":1439,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.findone",{"_index":1427,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":859,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1442,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1441,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1407,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1408,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1409,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1412,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1410,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get",{"_index":1466,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":1141,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1130,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1561,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1558,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1565,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1566,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1570,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1568,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1519,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1532,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1531,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1533,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1536,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1535,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1624,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.count",{"_index":848,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1620,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1623,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(_id",{"_index":1636,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id).populate",{"_index":1625,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":879,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":869,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1640,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1632,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1597,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1598,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1599,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.findone(userrole._id)).toobject",{"_index":1187,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.remove(id",{"_index":1601,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1600,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1709,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1705,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1261,"title":{},"body":{"injectables/MailService.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1708,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findbyid(_id",{"_index":1711,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1701,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1715,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1712,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1675,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1679,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1680,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1678,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1682,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1681,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1859,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.count",{"_index":844,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1854,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1858,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1862,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1851,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":880,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1867,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1866,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword",{"_index":883,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(userdto",{"_index":1785,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1798,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1800,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(registeruserdto",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.register(userdto",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1805,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(userdto",{"_index":1804,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttlerguard",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thuần",{"_index":448,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["thuẫn",{"_index":550,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["thuộc",{"_index":613,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/UpdateUserDto.html":{}}}],["thành",{"_index":522,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Resume.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["thêm",{"_index":1186,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["thấy",{"_index":508,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["thằng",{"_index":1629,"title":{},"body":{"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["thống",{"_index":875,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thời",{"_index":898,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thừa",{"_index":1743,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["thực",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":1031,"title":{},"body":{"classes/Job.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["times",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["timestamp",{"_index":1001,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["timestamps",{"_index":656,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tiếp",{"_index":1135,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tn9th8",{"_index":1947,"title":{},"body":{"properties.html":{}}}],["todo",{"_index":1438,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["token",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["ton",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["total",{"_index":590,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":538,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":540,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["toàn",{"_index":1744,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["tr",{"_index":451,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateRoleDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["trang",{"_index":537,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["transfer",{"_index":676,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["transform",{"_index":665,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":666,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1456,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1234,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":610,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{}}}],["true",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["trung",{"_index":1528,"title":{},"body":{"controllers/ResumesController.html":{}}}],["truy",{"_index":1159,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["truyền",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["try",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1328,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":623,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/UsersController.html":{}}}],["tròn",{"_index":535,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["trước",{"_index":949,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["trường",{"_index":620,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/UsersController.html":{}}}],["trống",{"_index":678,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":735,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean({message",{"_index":728,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["trống'})@isemail",{"_index":780,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["trống'})@ismongoid({each",{"_index":774,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({message",{"_index":784,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["trống'})@transform",{"_index":725,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["ts",{"_index":548,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/UsersController.html":{}}}],["ttl",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["tu",{"_index":853,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["type",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1948,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":566,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tên",{"_index":1338,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tìm",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"properties.html":{}}}],["tính",{"_index":1745,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["tường",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tại",{"_index":584,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tạo",{"_index":1308,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tồn",{"_index":1307,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":536,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["tức",{"_index":1134,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["u",{"_index":1335,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["unauthorizedexception",{"_index":1107,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('username",{"_index":1197,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1474,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unique",{"_index":1765,"title":{},"body":{"classes/User.html":{}}}],["unknown",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1944,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":559,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["update",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1802,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":955,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(_id",{"_index":1425,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":422,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{}}}],["update(updatesubscriberdto",{"_index":1665,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(userdto",{"_index":1778,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":423,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":638,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":606,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedresume",{"_index":1567,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updateduser",{"_index":1803,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatefiledto",{"_index":915,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":1047,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updateone",{"_index":622,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["updatepermissiondto",{"_index":1400,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1555,"title":{"classes/UpdateResumeDto.html":{}},"body":{"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1591,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":981,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatesubscriberdto",{"_index":1666,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1736,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertoken",{"_index":1825,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":941,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":925,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":911,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":917,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1713,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["use",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["useclass",{"_index":966,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["usefilters",{"_index":928,"title":{},"body":{"controllers/FilesController.html":{}}}],["usefilters(new",{"_index":950,"title":{},"body":{"controllers/FilesController.html":{}}}],["useguards",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":936,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":947,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":151,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@responsemessage('fetch",{"_index":1509,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["user.dto",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":700,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":701,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:20",{"_index":702,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:26",{"_index":793,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":791,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":794,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":789,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":792,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":788,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":795,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":790,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:57",{"_index":1447,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:61",{"_index":1445,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:64",{"_index":1448,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:67",{"_index":1444,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:70",{"_index":1446,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:73",{"_index":1443,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:81",{"_index":1769,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:88",{"_index":1768,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:9",{"_index":1739,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":501,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["user.name",{"_index":813,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/candidate",{"_index":873,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user?.permissions",{"_index":1148,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":892,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":831,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":828,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userdto",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":753,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":192,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('/login')@responsemessage('user",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":493,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["userregister",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userregister?._id",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["userregister?.createdat",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["userreq",{"_index":1038,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userreq._id",{"_index":1082,"title":{},"body":{"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["userreq.email",{"_index":1083,"title":{},"body":{"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":894,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":877,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1820,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1782,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1781,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":807,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1770,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":822,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":65,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":205,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uyenbao4a5@gmail.com",{"_index":1279,"title":{},"body":{"injectables/MailService.html":{}}}],["v",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["va",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":1437,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["validate",{"_index":607,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{}}}],["validate(payload",{"_index":1166,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1193,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":674,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateuser",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":675,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1957,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vd",{"_index":1857,"title":{},"body":{"injectables/UsersService.html":{}}}],["ve",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1940,"title":{},"body":{"properties.html":{}}}],["vi",{"_index":857,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/ResumesController.html":{}}}],["vietnam",{"_index":887,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viết",{"_index":944,"title":{},"body":{"controllers/FilesController.html":{}}}],["việc",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"properties.html":{}}}],["viện",{"_index":519,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["voi",{"_index":1529,"title":{},"body":{"controllers/ResumesController.html":{}}}],["void",{"_index":991,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["vui",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["vào",{"_index":1185,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["với",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["vừa",{"_index":1714,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["website",{"_index":1942,"title":{},"body":{"properties.html":{}}}],["welcome",{"_index":1283,"title":{},"body":{"injectables/MailService.html":{}}}],["within",{"_index":1121,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["without",{"_index":1351,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":629,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/JwtStrategy.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["xem",{"_index":1520,"title":{},"body":{"controllers/ResumesController.html":{}}}],["xin",{"_index":1178,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["xuống",{"_index":1809,"title":{},"body":{"controllers/UsersController.html":{}}}],["xác",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["xóa",{"_index":512,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["y",{"_index":697,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/MulterConfigService.html":{}}}],["you're",{"_index":1327,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\n\n@Controller() // route \"/\"\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService,\n  ) {}\n\n  // // MVC\n  // @Get() // route \" \" => Restful API\n  // @Render('home')\n  // handleHomePage() {\n  //   // port from .env\n  //   console.log('>> check port = ', this.configService.get('PORT'));\n  //   const message1 = this.appService.getHello();\n\n  //   return {\n  //     message: message1,\n  //   };\n  //   // return 'this.appService.getHello()';\n  // }\n\n  // @Get('abc') /// route \" \"  /\n  // getHello1(): string {\n  //   return 'this.appService.getHello() abc';\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  controllers: [AppController],\n  providers: [AppService],\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_DB_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }), // MongooseModule.forRoot('mongodb url')\n    ConfigModule.forRoot({ envFilePath: '.env' }), // isGlobal: true,\n    ScheduleModule.forRoot(), // to do following schedule\n    ThrottlerModule.forRoot({ ttl: 60, limit: 3 }), // max 3 access times / 60s\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    // model: query database\n    return 'Hello World! & Hỏi Dân IT';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/account')@ResponseMessage('Get user information')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@ApiBody({type: UserLoginDto})@Post('/login')@ResponseMessage('User login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(user: IUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/logout')@ResponseMessage('Logout User')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/refresh')@ResponseMessage('Get user by refresh token')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/register')@ResponseMessage('Register a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Render,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from './passport/local-auth.guard';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth') // route \"/\"\nexport class AuthController {\n  constructor(\n    private authService: AuthService, // private usersService: UsersService,\n    private roleService: RolesService,\n  ) { }\n\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @ApiBody({ type: UserLoginDto, })\n  @Post('/login')\n  @ResponseMessage('User login')\n  handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n\n  @Public()\n  @Post('/register')\n  @ResponseMessage('Register a new user')\n  handleRegister(@Body() registerUserDto: RegisterUserDto) {\n    return this.authService.register(registerUserDto);\n    // return this.usersService.register(registerUserDto);\n    // ko truyền @User() user: IUser vì ko có JWT\n  }\n\n  @Get('/account')\n  @ResponseMessage('Get user information')\n  async handleGetAccount(@User() user: IUser) {\n    const temp = (await this.roleService.findOne(user.role._id)) as any; // model => any (ko check type)\n    user.permissions = temp.permissions;\n    return { user }; // JS: req.user\n  }\n\n  @Public()\n  @Get('/refresh')\n  @ResponseMessage('Get user by refresh token')\n  handleRefreshToken(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n    return this.authService.processNewToken(refreshToken, response);\n    // làm việc với cookie nên cần response\n  }\n\n  @Post('/logout')\n  @ResponseMessage('Logout User')\n  handleLogout(\n    @User() user: IUser,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.logout(user, response);\n    // làm việc với cookie nên cần response\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { Reflector } from '@nestjs/core';\nimport ms from 'ms'; // hàm\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy, ConfigService],\n  exports: [AuthService],\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(userDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:85\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms'; // hàm\nimport { Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService, // để lấy ra data của .env\n    private rolesService: RolesService,\n  ) {}\n\n  // username, pass la 2 tham so la Passport nem ve\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUsername(username);\n    if (user) {\n      // neu dung email va co user co ton tai\n      const isValid = this.usersService.isValidPassword(pass, user.password);\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string }; // cast objectId to role object\n        const temp = await this.rolesService.findOne(userRole._id); // fetch role co chua permissions\n\n        const objUser = {\n          ...user.toObject(), // model => js object\n          permissions: temp?.permissions ?? [], // gan them permission\n        };\n\n        return objUser;\n      }\n    }\n    return null;\n  }\n\n  async login(user: IUser, response: Response) {\n    const { _id, name, email, role, permissions } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n    };\n    const refresh_token = this.createRefreshToken(payload);\n\n    // update user with refresh token\n    await this.usersService.updateUserToken(refresh_token, _id);\n\n    // set refresh_token as cookies at client\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')), //milisecond\n    });\n\n    // response\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions,\n      },\n    };\n  }\n\n  // arrow function\n  createRefreshToken = (payload: any) => {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000, // dv: second\n    });\n    return refresh_token;\n  };\n\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      // verify: xác thực và decode refresh token luôn\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n      // tìm user theo refresh token => update refresh token\n      let user = await this.usersService.findUserByToken(refreshToken);\n      if (user) {\n        const { _id, name, email, role } = user; // user: Model => _id: ObjectId // role: ObjectId\n        const payload = {\n          sub: 'token refresh',\n          iss: 'from server',\n          _id,\n          name,\n          email,\n          role,\n        };\n        const refresh_token = this.createRefreshToken(payload);\n\n        // update user with refresh token\n        await this.usersService.updateUserToken(refresh_token, _id.toString());\n\n        // fetch user's role\n        const userRole = user.role as unknown as { _id: string; name: string }; // cast ObjectID => {...}\n        const temp = await this.rolesService.findOne(userRole._id);\n\n        // set refresh_token as cookies at client\n        response.clearCookie('refresh_token');\n        response.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')), //milisecond\n        });\n\n        // response\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          `Refresh token không hợp lệ. Vui lòng login`,\n        );\n      }\n    } catch (error) {\n      throw new BadRequestException(\n        `Refresh token không hợp lệ. Vui lòng login`,\n      );\n    }\n  };\n\n  async register(userDto: RegisterUserDto) {\n    let userRegister = await this.usersService.register(userDto);\n\n    return {\n      _id: userRegister?._id,\n      createdAt: userRegister?.createdAt,\n      // use ? to avoid the case that newUser = null;\n    };\n  }\n\n  async logout(user: IUser, response: Response) {\n    await this.usersService.updateUserToken('', user._id);\n    response.clearCookie('refresh_token');\n    return 'done';\n    // update server: refresh token = null/ empty\n    // update client:  clear refresh_token as cookies\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch list companies with panigation')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) { }\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    console.log(createCompanyDto);\n    return this.companiesService.create(createCompanyDto, user);\n    // @User user chính là req.user\n    // console.log('>>> user infor in request: ', user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch list companies with panigation')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n    // const currentPage: string = req.query.page;\n    // Expressjs code thuần, Nestjs hỗ trợ bằng decorator\n    // qs: query string\n    // @Query qs / req.query: convert \"raw query\" ==> object\n    // +currentPage: convert string ==> number\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { User } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name) // connect shema of mongo\n    private companyModel: SoftDeleteModel, //private userModel: Model,\n  ) {}\n\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    // ... mean is that copying all data of createCompanyDto to insert 1 document at database\n    return await this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    // return { filter }; // check filter thấy dự page và limit nên phải xóa\n    // { projection, population } để join bảng\n    // regular expression:\n    // - filter của thư viện sẽ biểu = thành eq của mongoDB\n    // - LIKE operator on mongoose: /pattern/i\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    // count all documents theo điều kiện filter\n    // chia và làm tròn ra tổng số trang\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    // sort(sort) có bug\n    // vì 2 package mongoose và api-query-param bị bênh / lỗi\n    // vì TS và JS bị mẫu thuẫn type do TS check type\n\n    // Cách 1 fix: ý là code mình đã chắc đúng, bảo TS ko check type nữa\n    // @ts-ignore: Unreachable code error\n\n    // Cách 2 fix: dùng any everywhere => ép kiểu về phía bên phải\n    // .sort(sort as any)\n\n    // Cách 3 fix: dùng any => convert types of destructuring object in TS\n    // let {sort}: {sort: any} = aqp(sq) // khai báo biến và ép kiểu bên cạch\n    // let { sort }= aqp(rq);\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company with id=${id}`); // status: 200 => 400\n    }\n\n    return await this.companyModel.findById(id);\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    // check id hop le\n\n    return await this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, @User() user: IUser) {\n    // Cách 1 validate:\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user';\n    }\n\n    // // Cách 2 validate:\n    // // hàm này đã nằm trong softDelete\n    // // hàm find thuộc soft-delete-plugin\n    // const templates = await this.find({ _id: id });\n    // if (!templates) {\n    //   return Error('Element not found');\n    // }\n\n    // Cách 1 delete:\n    // hàm softDelete có hạn chế không hỗ trợ lưu trường detetedBy\n    // nên dùng hàm updateOne ở trên để hổ trợ\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.companyModel.softDelete({ _id: id });\n\n    // // Cách 2 delete:\n    // // +: dùng 1 câu query\n    // // -: frontend khó xử lý\n    // await this.companyModel.updateOne(\n    //   { _id: id },\n    //   {\n    //     detetedBy: {\n    //       _id: user._id,\n    //       email: user.email,\n    //     },\n    //     isDeleted: true,\n    //     deletedAt: new Date(),\n    //   },\n    // );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true }) // biến class thành 1 schema\nexport class Company {\n  @Prop()\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Validate object prop\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\n// Data transfer object // class = {}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Skills không được để trống' })\n  @IsArray({ message: 'skills có định dạng là array' }) // check list skills\n  @IsString({ each: true, message: 'skill có định dạng là string' }) // check each skill in skills\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({ message: 'Location không được để trống' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Salary không được để trống' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Quantity không được để trống' })\n  quantity: number;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string; //html\n\n  @IsNotEmpty({ message: 'Started Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'endDate có định dạng là Date' })\n  startDate: Date;\n\n  @IsNotEmpty({ message: 'Ended Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'endDate có định dạng là Date' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'isActive không được để trống' })\n  @IsBoolean({ message: 'isActive có định dạng là boolean' })\n  isActive: boolean;\n\n  // check endDate sau startDate ở đây hoặc trong service\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Validate object prop\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n// Data transfer object // class = {}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'role không được để trống' })\n  @IsMongoId({ message: 'role có định dạng là mongo object id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\n\n//create-user.dto\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ad@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Logo không được để trống' })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Ended Date không được để trống'})@Transform( => )@IsDate({message: 'endDate có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive có định dạng là boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được để trống'})@IsArray({message: 'skills có định dạng là array'})@IsString({each: true, message: 'skill có định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Started Date không được để trống'})@Transform( => )@IsDate({message: 'endDate có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Validate object prop\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\n// Data transfer object // class = {}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Skills không được để trống' })\n  @IsArray({ message: 'skills có định dạng là array' }) // check list skills\n  @IsString({ each: true, message: 'skill có định dạng là string' }) // check each skill in skills\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({ message: 'Location không được để trống' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Salary không được để trống' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Quantity không được để trống' })\n  quantity: number;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string; //html\n\n  @IsNotEmpty({ message: 'Started Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'endDate có định dạng là Date' })\n  startDate: Date;\n\n  @IsNotEmpty({ message: 'Ended Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'endDate có định dạng là Date' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'isActive không được để trống' })\n  @IsBoolean({ message: 'isActive có định dạng là boolean' })\n  isActive: boolean;\n\n  // check endDate sau startDate ở đây hoặc trong service\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n// Data transfer object\nexport class CreatePermissionDto {\n  @IsNotEmpty({ message: 'name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'apiPath không được để trống' })\n  apiPath: string;\n\n  @IsNotEmpty({ message: 'method không được để trống' })\n  method: string;\n\n  @IsNotEmpty({ message: 'module không được để trống' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email phải đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Data transfer object\nexport class CreateResumeDto {\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId không được để trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string; // PENDING-REVIEWING-APPROVED-REJECTEDd\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n// Data transfer object\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId phải là 1 mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId phải là 1 mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive ccó giá trị boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions không được để trống'})@IsMongoId({each: true, message: 'permissions phải là mongo object id'})@IsArray({message: 'permissions phải là list array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsMongoId,\n  IsNotEmpty,\n  isBoolean,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'description không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive không được để trống' })\n  @IsBoolean({ message: 'isActive ccó giá trị boolean' })\n  isActive: boolean;\n\n  @IsNotEmpty({ message: 'permissions không được để trống' })\n  @IsMongoId({ each: true, message: 'permissions phải là mongo object id' })\n  @IsArray({ message: 'permissions phải là list array' })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email không được để trống'})@IsEmail({}, {message: 'Email phải đúng định dạng'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills không được để trống'})@IsArray({message: 'skills có định dạng là array'})@IsString({each: true, message: 'skill có định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'skills không được để trống' })\n  @IsArray({ message: 'skills có định dạng là array' })\n  @IsString({ each: true, message: 'skill có định dạng là string' })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})@IsMongoId({message: 'companyId phải là 1 mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})@IsMongoId({message: 'jobId phải là 1 mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Data transfer object\nexport class CreateResumeDto {\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId không được để trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string; // PENDING-REVIEWING-APPROVED-REJECTEDd\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n// Data transfer object\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId phải là 1 mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId phải là 1 mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email phải đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'role không được để trống'})@IsMongoId({message: 'role có định dạng là mongo object id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Validate object prop\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n// Data transfer object // class = {}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'role không được để trống' })\n  @IsMongoId({ message: 'role có định dạng là mongo object id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\n\n//create-user.dto\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ad@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('databases')\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schemas';\nimport { ConfigService } from '@nestjs/config';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService, ConfigService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schemas';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    this.logger.log(`>>> THE MODULE HAS BEEN INITIALIZED`);\n\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      // check exist\n      const countUser = await this.userModel.count({});\n      const countPermission = await this.permissionModel.count({});\n      const countRole = await this.roleModel.count({});\n\n      // create permissions\n      // bulk create: tao nhieu phan tu cung luc, thay vi dung for\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n      }\n\n      // create roles\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id'); // find, select: lay tat ca document, 1 documnet chi lay 1 field id\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thì full quyền :v',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'User/Candidate sử dụng hệ thống',\n            isActive: true,\n            permissions: [], // sau này dùng admin account to update user role\n          },\n        ]);\n      }\n\n      // create users\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'admin@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 26,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm IT technician\",\n            email: 'it@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 26,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm normal user\",\n            email: 'user@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 26,\n            gender: 'FEMALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n        // Logger: giúp chỉ ra thời điểm chạy, file đang chạy => biết chính xác nguồn gốc câu lệnh log\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload Single File')@UseInterceptors(undefined)@UseFilters(new HttpExceptionFilter())\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filename: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n  UseFilters,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\n\nimport { HttpExceptionFilter } from 'src/core/http-exception.filter';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UseInterceptors } from '@nestjs/common/decorators/core/use-interceptors.decorator';\n\n@ApiTags('file')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  // Upload file\n  // request => interceptor => pipe (validate) => response\n  // bug: upload file at interceptor, then validate\n  // fix: xử lí ở interceptor | viết pipe xóa file\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload Single File')\n  @UseInterceptors(FileInterceptor('fileUpload')) // key // chạy interceptor trước\n  @UseFilters(new HttpExceptionFilter())\n  uploadFile(\n    @UploadedFile()\n    file: Express.Multer.File,\n  ) {\n    return { filename: file.filename }; // console.log(file);\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n      // MulterModule ko thể config globally trong app.module hay main\n    }),\n  ],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http-exception.filter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n\n        response\n            .status(status)\n            .json({\n                // statusCode: status,\n                // timestamp: new Date().toISOString(),\n                // path: request.url,\n\n                error: \"Payload Too Large\",\n                message: \"File too large customize\",\n                statusCode: status,\n            });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true }) // biến class thành 1 schema // lấy time at\nexport class Job {\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n    logo: string;\n  };\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string; //html\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: Date;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch jobs with pagination')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Fetch a job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n\n  @Post()\n  @ResponseMessage('Create a new job')\n  async create(@Body() createJobDto: CreateJobDto, @User() userReq: IUser) {\n    return this.jobsService.create(createJobDto, userReq);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Fetch jobs with pagination')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Fetch a job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a job by id')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() userReq: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, userReq);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a job by id')\n  remove(@Param('id') id: string, @User() userReq: IUser) {\n    return this.jobsService.remove(id, userReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schemas';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, userReq: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, userReq: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, userReq: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { Job, JobDocument } from './schemas/job.schemas';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name) // connect shema of mongo\n    private jobModel: SoftDeleteModel, //private userModel: Model,\n  ) {}\n\n  async create(createJobDto: CreateJobDto, @User() userReq: IUser) {\n    let newJob = await this.jobModel.create({\n      ...createJobDto,\n      createdBy: {\n        _id: userReq._id,\n        email: userReq.email,\n      },\n    });\n    return newJob;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user';\n    }\n\n    return await this.jobModel.findOne({ _id: id });\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, userReq: IUser) {\n    return await this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: userReq._id,\n          email: userReq.email,\n        },\n      },\n    );\n  }\n\n  async remove(_id: string, userReq: IUser) {\n    // Cách 1 validate:\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      return 'Not found user';\n    }\n\n    await this.jobModel.updateOne(\n      { _id },\n      {\n        deletedBy: {\n          _id: userReq._id,\n          email: userReq.email,\n        },\n      },\n    );\n    return this.jobModel.softDelete({ _id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt-auth.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt-auth.guard.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  // Guard sẽ check ta sẽ sử dụng jwt strategy\n\n  constructor(private reflector: Reflector) {\n    // ta sẽ dùng class Reflector (phản chiếu) để lấy Metadate ra\n    super();\n  }\n  // For this, you can extend the built-in class and override methods within a sub-class:\n\n  canActivate(context: ExecutionContext) {\n    // Overide\n    // Add your custom authentication logic here: truyền key để lấy value của metadata\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    // nếu isPublic là true thì JwtAuthGuard trả về true, tức là đi tiếp\n    if (isPublic) {\n      return true;\n    }\n    // nếu không đề framework sẽ làm\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    // Overide\n    // Customize the default error handling\n    // Lấy kết quả từ jwt strategy (validate)\n    const request: Request = context.switchToHttp().getRequest();\n\n    const isPublicPerminssion = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          'Không có Token ở Bearer Token trong Request Header / Token không hợp lệ',\n        )\n      );\n    }\n\n    // validate each permission in user permissions\n    const targetMethod = request.method;\n    const targetEndpoint = request.route?.path as string;\n    const permissions = user?.permissions ?? []; // ko có trả về rỗng\n\n    let isExist = permissions.find(\n      (permission) =>\n        targetMethod === permission.method &&\n        targetEndpoint === permission.apiPath,\n    );\n\n    // pubic permission of auth module: login, out, get account,...\n    if (targetEndpoint.startsWith('/api/v1/auth')) {\n      isExist = true;\n    }\n\n    // neu ko ton tai permission + ko skip permission // 200 => 403: ko có quyền\n    if (!isExist && !isPublicPerminssion) {\n      throw new ForbiddenException(\n        'Bạn không có quyền hạn (permission) truy cập endpoint này',\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  // Strategy là thư viện xử lý token như encode, decode\n\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n      // Passport requires some initialization: token trong request header + xin signature\n      // Passport sau đó decode token (decode token in super())\n      // Passport auto gọi validate() để pass the decoded JSON as its single parameter và gán vào req.user\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role } = payload;\n\n    // cần gán thêm permissions vào req.user\n    const userRole = role as unknown as { _id: string; name: string }; // cast objectId to role object\n    const temp = (await this.rolesService.findOne(userRole._id)).toObject(); // fetch role co chua permissions\n\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: temp?.permissions ?? [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Username / password không hợp lệ');\n    }\n    return user; // req.user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleSendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleSendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSendMail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Send a new-job email')@Cron('0 0 7 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schemas';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\nimport { Subscriber } from 'rxjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(private readonly mailService: MailService) {}\n\n  @Get()\n  @Public()\n  @ResponseMessage('Send a new-job email')\n  @Cron('0 0 7 * * 0') // Every Sun, 7h:0m:0s // @Cron('10 * * * * *')\n  async handleSendMail() {\n    this.mailService.sendMail();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schemas';\n\n@Module({\n  controllers: [MailController],\n  providers: [MailService],\n  imports: [\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'), // __dirname là address của root: mail modules\n          adapter: new HandlebarsAdapter(), // config file hbs hay ejs\n          options: {\n            strict: true,\n          },\n        },\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, subscriberModel: SoftDeleteModel, jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schemas';\nimport { SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private readonly mailerService: MailerService,\n\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  async sendMail() {\n    // find all subcribers\n    const subscribers = await this.subscriberModel.find({});\n    // send mail for each subcribers\n    for (const subs of subscribers) {\n      // find job có skills in subcribers's skills\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills?.length) {\n        // định dạng dữ liệu job trước khi gửi\n        const jobs = jobWithMatchingSkills.map((item: any) => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary:\n              `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n            skills: item.skills,\n          };\n        });\n        // gửi mail\n        await this.mailerService.sendMail({\n          to: 'uyenbao4a5@gmail.com',\n          from: '\"Support Team\" ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'new-job', // HTML body content\n          context: {\n            receiver: subs.name,\n            jobs: jobs,\n          },\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  // trả đường link of folder root\n  getRootPath = () => {\n    return process.cwd();\n  };\n\n  // check nếu folder ko tồn tại => tạo\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  // createMulterOptions: cấu hình multer: nơi lưu file,...\n  // diskStorage là ổ đĩa của chúng ta, lưu trong server, host BE ở đâu thì nó sẽ lưu ở đấy\n  // destination: override: lấy động folder lưu trữ file\n  // filename: overide: đặt tên file\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? \"default\";\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`))\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n          let finalName = `${baseName}-${Date.now()}${extName}`\n          cb(null, finalName)\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        const allowedFileTypes = ['jpg', 'jpeg', 'png', 'gif', 'pdf', 'doc', 'docx'];\n        const fileExtension = file.originalname.split('.').pop().toLowerCase();\n        const isValidFileType = allowedFileTypes.includes(fileExtension);\n        if (!isValidFileType) {\n          cb(new HttpException('Invalid file type', HttpStatus.UNPROCESSABLE_ENTITY), null);\n        } else\n          cb(null, true);\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 1 // 1MB\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n//\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all permissions with pagnigate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage('Create a new permission')\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all permissions with pagnigate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a permission by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a permission')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\n\n@Module({\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { apiPath, method } = createPermissionDto;\n\n    // check if is exist 1 permission with apiPath + method ?\n    const isExist = await this.permissionModel.findOne({ apiPath, method });\n    if (isExist) {\n      throw new BadRequestException(\n        `Permission với apiPath=${apiPath} và method=${method} đã tồn tại`,\n      );\n    }\n\n    const newPermission = await this.permissionModel.create({\n      ...createPermissionDto,\n      createdBy: { _id: user._id, email: user.email },\n    });\n\n    return {\n      _id: newPermission?._id,\n      createdAt: newPermission?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    // check if is valid following a mongo object id\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company with id=${id}`); // status: 200 => 400\n    }\n\n    // check if is not exist the mongo object id ?\n    // todo\n\n    return await this.permissionModel.findById(id);\n  }\n\n  async update(\n    _id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) {\n    // check if is valid following a mongo object id\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`not found company with id=${_id}`); // status: 200 => 400\n    }\n\n    // check if is not exist the mongo object id ?\n    // todo\n\n    return await this.permissionModel.updateOne(\n      { _id },\n      {\n        ...updatePermissionDto,\n        updatedBy: { _id: user._id, email: user.email },\n      },\n    );\n  }\n\n  async remove(_id: string, user: IUser) {\n    // check if is valid following a mongo object id\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`not found company with id=${_id}`); // status: 200 => 400\n    }\n\n    // check if is not exist the mongo object id ?\n    // todo\n\n    await this.permissionModel.updateOne(\n      { _id },\n      {\n        deletedBy: { _id: user._id, email: user.email },\n      },\n    );\n    return this.permissionModel.softDelete({ _id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email phải đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Validate object prop\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n// Data transfer object // class = {}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'role không được để trống' })\n  @IsMongoId({ message: 'role có định dạng là mongo object id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\n\n//create-user.dto\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ad@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE_KEY } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message?: string; // optional\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  // ta dùng Reflector để lấy ra Metadata\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    // định nghĩa kiểu trả về là Interface Response\n    return (\n      next\n        // data là lấy về từ return của controller, interceptor sẽ xử lý data\n        // interceptor chayk 2 lần: lần 1 trước khi gửi req, lần 2 trước khi gửi response\n        // hàm map(data) lấy date của controller vào lần 2\n        .handle()\n        .pipe(\n          map((data) => ({\n            statusCode: context.switchToHttp().getResponse().statusCode,\n            message:\n              this.reflector.get(\n                RESPONSE_MESSAGE_KEY, // lấy ra bằng key\n                context.getHandler(),\n              ) || '',\n            data: data,\n            // {\n            //   result: data.result,\n            //   meta: {}, // if this is supposed to be the actual return then replace {} with data.result\n            // },\n          })),\n        )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schemas.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schemas';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true }) // biến class thành 1 schema // lấy time at\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string; // PENDING-REVIEWING-APPROVED-REJECTEDd\n\n  // @Prop()\n  // companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n  // job: Job;\n  // dinh nghia type => de no hieu minh dung ref\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updatedAt: Date;\n    updatedBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean; //isDeleted\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findByUser\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with pagnigate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Fetch a resumes by user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status of resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new resume')\n  create(@Body() createUserCvDto: CreateUserCvDto, @User() userReq: IUser) {\n    return this.resumesService.create(createUserCvDto, userReq);\n  }\n\n  // xem lish su rai CV\n  // khong ne dung Get vi: @Get('by-user') trung voi @Get(':id')\n  @Post('by-user')\n  @ResponseMessage('Fetch a resumes by user')\n  findByUser(@User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all resumes with pagnigate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a resume by id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status of resume')\n  update(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User() user: IUser,\n  ) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a resume by id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schemas';\n\n@Module({\n  controllers: [ResumesController],\n  providers: [ResumesService],\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]),\n  ],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsers(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schemas';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name) // connect shema of mongo\n    private resumeModel: SoftDeleteModel, //private userModel: Model,\n  ) {}\n\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    const { url, companyId, jobId } = createUserCvDto;\n    const { email, _id } = user;\n\n    const newCv = await this.resumeModel.create({\n      email,\n      url,\n      companyId,\n      jobId,\n      userId: _id,\n      status: 'PENDING',\n      createdBy: { _id, email },\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: { _id, email },\n        },\n      ],\n    });\n\n    return {\n      _id: newCv?._id,\n      createdAt: newCv?.createdAt,\n    };\n  }\n\n  async findByUsers(user: IUser) {\n    return await this.resumeModel\n      .find({ userId: user._id })\n      .sort('-createdAt') // lay CV duoc tao gan nhat\n      .populate([\n        { path: 'companyId', select: { name: 1 } },\n        { path: 'jobId', select: { name: 1 } },\n      ]);\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company with id=${id}`); // status: 200 => 400\n    }\n\n    return await this.resumeModel.findById(id);\n  }\n\n  async update(id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company with id=${id}`); // status: 200 => 400\n    }\n\n    const updatedResume = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n\n    return updatedResume;\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company with id=${id}`); // status: 200 => 400\n    }\n\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: mongoose.Schema.Types.ObjectId[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean; //isDeleted\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all roles with pagnigate')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all roles with pagnigate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a permission by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a permission')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schemas';\n\n@Module({\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]),\n  ],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Role, RoleDocument } from './schemas/role.schemas';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name } = createRoleDto;\n\n    // check if is exist name ?\n    const isExist = await this.roleModel.findOne({ name });\n    if (isExist) {\n      throw new BadRequestException(`Role với name=${name} đã tồn tại`);\n    }\n\n    const newRole = await this.roleModel.create({\n      ...createRoleDto,\n      createdBy: { _id: user._id, email: user.email },\n    });\n\n    return {\n      _id: newRole?._id,\n      createdAt: newRole?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`not found company with id=${id}`); // status: 200 => 400\n    }\n    return await this.roleModel.findById(id).populate({\n      path: 'permissions', // giống với prop trong role schema\n      select: { _id: 1, name: 1, apiPath: 1, method: 1, module: 1 }, // -1: ko lay, 1: lay\n    });\n  }\n\n  async update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`not found company with id=${_id}`); // status: 200 => 400\n    }\n\n    // check name khác với nhưng thằng còn lại?\n    // to do\n\n    return await this.roleModel.updateOne(\n      { _id },\n      {\n        ...updateRoleDto,\n        updatedBy: { _id: user._id, email: user.email },\n      },\n    );\n  }\n\n  async remove(_id: string, user: IUser) {\n    // check if is valid following a mongo object id\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`not found company with id=${_id}`); // status: 200 => 400\n    }\n\n    // logic: prevent removing role admin:\n    const foundRole = await this.roleModel.findById(_id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException(`Không thể xóa role admin=${ADMIN_ROLE}`);\n    }\n\n    // check if is not exist the mongo object id ?\n    // todo\n\n    await this.roleModel.updateOne(\n      { _id },\n      {\n        deletedBy: { _id: user._id, email: user.email },\n      },\n    );\n    return this.roleModel.softDelete({ _id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop()\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean; //isDeleted\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all subscribers with pagnigate')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@SkipCheckPermission()@ResponseMessage('Get subscriber's skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Remove a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport {\n  ResponseMessage,\n  SkipCheckPermission,\n  User,\n} from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) { }\n\n  @Post()\n  @ResponseMessage('Create a new subscriber')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post()\n  @SkipCheckPermission()\n  @ResponseMessage(\"Get subscriber's skills\")\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all subscribers with pagnigate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a subscriber by id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @SkipCheckPermission()\n  @ResponseMessage('Update a subscriber')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Remove a subscriber')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema';\nimport { Job } from 'src/jobs/schemas/job.schemas';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    // validate: phải chưa tồn tại email\n    const isExist = await this.subscriberModel.findOne({\n      name: createSubscriberDto.name,\n    });\n    if (isExist) {\n      throw new BadRequestException(\n        `Subscriber với name=${createSubscriberDto.name} đã tồn tại`,\n      );\n    }\n\n    const newSubscriber = await this.subscriberModel.create({\n      ...createSubscriberDto,\n      createdBy: { _id: user._id, email: user.email },\n    });\n\n    return {\n      _id: newSubscriber?._id,\n      createdAt: newSubscriber?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.subscriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(_id: string) {\n    // validate: id is object id\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Subscriber with id=${_id} not found`); // status: 200 => 400\n    }\n    // do\n    return await this.subscriberModel.findById(_id);\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    return await this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: { _id: user._id, email: user.email },\n      },\n      { upsert: true }, // vừa update nếu tồn tại, insert nếu chưa\n    );\n  }\n\n  async remove(_id: string, user: IUser) {\n    // validate: id is a object id\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(`Subscriber with id=${_id} not found`); // status: 200 => 400\n    }\n\n    await this.subscriberModel.updateOne(\n      { _id },\n      {\n        deletedBy: { _id: user._id, email: user.email },\n      },\n    );\n    return this.subscriberModel.softDelete({ _id });\n  }\n\n  async getSkills(user: IUser) {\n    const { email } = user;\n    return await this.subscriberModel.findOne({ email }, { skills: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE_KEY } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message?: string; // optional\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  // ta dùng Reflector để lấy ra Metadata\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    // định nghĩa kiểu trả về là Interface Response\n    return (\n      next\n        // data là lấy về từ return của controller, interceptor sẽ xử lý data\n        // interceptor chayk 2 lần: lần 1 trước khi gửi req, lần 2 trước khi gửi response\n        // hàm map(data) lấy date của controller vào lần 2\n        .handle()\n        .pipe(\n          map((data) => ({\n            statusCode: context.switchToHttp().getResponse().statusCode,\n            message:\n              this.reflector.get(\n                RESPONSE_MESSAGE_KEY, // lấy ra bằng key\n                context.getHandler(),\n              ) || '',\n            data: data,\n            // {\n            //   result: data.result,\n            //   meta: {}, // if this is supposed to be the actual return then replace {} with data.result\n            // },\n          })),\n        )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {\n  @IsNotEmpty({ message: '_id không được để trống' })\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, [\n  'password',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  @IsNotEmpty({ message: '_id không được để trống' })\n  _id: string;\n}\n// PartialType(CreateUserDto): kế thừa toàn bộ thuộc tính\n// OmitType(CreateUserDto, ['name'] as const): bỏ thuộc tính\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schemas';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true }) // biến class thành 1 schema // lấy time at\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ required: true })\n  email: string; // unique\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'ad@gmail.com', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n// Validate object prop\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\n// Data transfer object // class = {}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'role không được để trống' })\n  @IsMongoId({ message: 'role có định dạng là mongo object id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email phải đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Age không được để trống' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Gender không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n}\n\n//create-user.dto\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'ad@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userDto: CreateUserDto, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch user with pagnigate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch a user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userDto: UpdateUserDto, userReq: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { IUser } from './users.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users') // /users\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post() // \"\"\n  @ResponseMessage('Create a new User')\n  async create(@Body() userDto: CreateUserDto, @User() userReq: IUser) {\n    let newUser = await this.usersService.create(userDto, userReq);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    };\n    // userDto: lấy các trường trong dto và có sức mạnh @Body (dựa vào req.body để lấy giá trị trả về)\n    // @Body('email') email: string // const email: sting = req.body.email // overload với @Body khác\n  }\n\n  @Get()\n  @ResponseMessage('Fetch user with pagnigate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch a user by id')\n  findOne(@Param('id') id: string) {\n    const foundUser = this.usersService.findOne(id);\n    return foundUser;\n    // TS: @Param('id')\n    // JS: const id: sting = req.param.id\n  }\n\n  @Patch()\n  @ResponseMessage('Update a user')\n  update(@Body() userDto: UpdateUserDto, @User() userReq: IUser) {\n    const updatedUser = this.usersService.update(userDto, userReq);\n    return updatedUser;\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a user')\n  remove(@Param('id') id: string, @User() userReq: IUser) {\n    return this.usersService.remove(id, userReq);\n  }\n\n  // Note: với @Get(':id') và @Get('/getAll'), Nest.js sẽ chạy từ trên xuống dưới, thằng nào map sẽ enter vào\n  // So: cái nào cần (2 @Get có route) sẽ chuyển sang @Post và đưa data vào body\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schemas';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, ConfigService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userDto: CreateUserDto, userReq: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(userDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, userReq: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userDto: UpdateUserDto, userReq: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userReq\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:202\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport mongoose, { Model } from 'mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport { User as UserReq } from 'src/decorator/customize';\nimport aqp from 'api-query-params';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schemas';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) // connect shema of mongo\n    private userModel: SoftDeleteModel, // private userModel: Model, // data type\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n  ) {}\n\n  getHashPassword = (plainPassword: string) => {\n    const salt = genSaltSync(10); // config\n    const hash = hashSync(plainPassword, salt); // hash\n    return hash;\n  };\n\n  async create(userDto: CreateUserDto, @UserReq() userReq: IUser) {\n    const { name, email, password, age, gender, address, role, company } =\n      userDto;\n\n    // logic check mail\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email ${email} đã tồn tại. Vui lòng sử dụng email khác`,\n      );\n    }\n\n    // hash\n    const hashPassword = this.getHashPassword(userDto.password);\n\n    // create\n    let newUser = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role,\n      company,\n      createdBy: {\n        _id: userReq._id,\n        email: userReq.email,\n      },\n    });\n\n    return newUser;\n  }\n\n  async register(userDto: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = userDto;\n\n    // add logic check existing mail\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email ${email} đã tồn tại. Vui lòng sử dụng email khác`,\n      );\n    }\n\n    // fetch USER_ROLE role\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n\n    // hash password\n    const hashPassword = this.getHashPassword(password);\n\n    // do\n    let userRegister = await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id,\n    });\n\n    return userRegister;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    // regular expression:\n    // - filter của thư viện sẽ biến thành qs của mongoDB\n    // - VD: /pattern/i :: LIKE operator on mongoose\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    // count all documents theo điều kiện filter\n    // chia và làm tròn ra tổng số trang\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select('-password')\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found user';\n    }\n\n    return await this.userModel\n      .findOne({\n        _id: id,\n      })\n      .select('-password')\n      .populate({ path: 'role', select: { name: 1, _id: 1 } });\n    // -password :: exclude >('ADMIN_EMAIL');\n    const foundUser = await this.userModel.findById(id);\n    if (foundUser.email === adminEmail) {\n      throw new BadRequestException(`Không thể xóa email admin=${adminEmail}`);\n    }\n\n    // updateOne( detetedBy ) + softDelete\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: userReq._id,\n          email: userReq.email,\n        },\n      },\n    );\n    return this.userModel.softDelete({ _id: id });\n  }\n\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    await this.userModel.updateOne({ _id }, { refreshToken });\n  };\n\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel\n      .findOne({ refreshToken })\n      .populate({ path: 'role', select: { name: 1 } });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schemas.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schemas.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schemas.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schemas.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schemas.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schemas.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.0.3\n        \n            @nestjs/mapped-types : 1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/throttler : ^4.1.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : 1.4.6\n        \n            cron : 2.4.3\n        \n            ejs : 3.1.9\n        \n            handlebars : 4.7.7\n        \n            helmet : 7.1.0\n        \n            mongoose : 7.1.0\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : 1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Website tìm việc làm\n        \n            License : UNLICENSED\n        \n            Author : nnbxxx, tn9th8\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schemas.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schemas.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schemas.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schemas.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE_KEY   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schemas.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schemas.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPerminssion'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE_KEY, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n    // ý nghĩa:\n    // import {Request} from Express;\n    // @Req req: Request;\n    // coust user = req.user; ==> cách cũ này không tường minh và mất 2 lần code\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
